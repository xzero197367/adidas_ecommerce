//using Microsoft.EntityFrameworkCore;
//using Adidas.Models.Main;
//using Adidas.Models.Feature;
//using System;
//using Adidas.Models.Separator;
//using Models.People;
//using Microsoft.AspNetCore.Identity;

//namespace Adidas.Context.Seeds
//{
//    public static class AdidasDbContextSeed
//    {
//        public static void Seed(ModelBuilder modelBuilder)
//        {
//            // ✅ Admin User Seed
//            var adminId = "aaaaaaaa-1111-2222-3333-444444444444";
//            var hasher = new PasswordHasher<User>();
//            var adminUser = new User
//            {
//                Id = adminId,
//                Email = "admin@adidas.com",
//                UserName = "admin@adidas.com",
//                NormalizedEmail = "ADMIN@ADIDAS.COM",
//                NormalizedUserName = "ADMIN@ADIDAS.COM",
//                EmailConfirmed = true,
//                IsActive = true,
//                Phone = "0000000000",
//                Role = UserRole.Admin,
//                CreatedAt = DateTime.UtcNow,
//                SecurityStamp = Guid.NewGuid().ToString()
//            };
//            adminUser.PasswordHash = hasher.HashPassword(adminUser, "Admin@123");
//            modelBuilder.Entity<User>().HasData(adminUser);

//            // ✅ Brands
//            modelBuilder.Entity<Brand>().HasData(
//                new Brand { Id = Guid.Parse("11111111-1111-1111-1111-111111111111"), Description = "Adidas Samba is one of the most iconic Adidas shoe lines.", Name = "Adidas", LogoUrl = "/images/brands/adidas-samba.png", IsActive = true },
//                new Brand { Id = Guid.Parse("22222222-2222-2222-2222-222222222222"), Description = "Adidas Samba is one of the most iconic Adidas shoe lines.", Name = "Adidas Samba", LogoUrl = "/images/brands/adidas-samba.png", IsActive = true },
//                new Brand { Id = Guid.Parse("33333333-3333-3333-3333-333333333333"), Description = "Adidas Samba is one of the most iconic Adidas shoe lines.", Name = "Adidas Originals", LogoUrl = "/images/brands/adidas-samba.png", IsActive = true }
//            );

//            // ✅ Categories
//            // ✅ Seed Categories
//            // ✅ Seed Categories
//            modelBuilder.Entity<Category>().HasData(
//                new Category
//                {
//                    Id = Guid.Parse("44444444-4444-4444-4444-444444444444"),
//                    Name = "Shoes",
//                    Slug = "shoes",
//                    IsActive = true,
//                    Description = "All types of Adidas shoes for men and women",
//                    ImageUrl = "/images/categories/shoes.jpg"
//                },
//                new Category
//                {
//                    Id = Guid.Parse("55555555-5555-5555-5555-555555555555"),
//                    Name = "Clothes",
//                    Slug = "clothes",
//                    IsActive = true,
//                    Description = "Adidas clothing line including t-shirts, jackets and pants",
//                    ImageUrl = "/images/categories/clothes.jpg"
//                }
//            );



//            // ✅ Products
//            modelBuilder.Entity<Product>().HasData(
//                new Product
//                {
//                    Id = Guid.Parse("66666666-6666-6666-6666-666666666666"),
//                    Name = "Adidas Ultraboost",
//                    Description = "High performance running shoes",
//                    ShortDescription = "Running Shoes",
//                    Price = 120,
//                    CategoryId = Guid.Parse("44444444-4444-4444-4444-444444444444"),
//                    BrandId = Guid.Parse("11111111-1111-1111-1111-111111111111"),
//                    GenderTarget = Gender.Unisex,
//                    IsActive = true,
//                    Sku = "UB-001",
//                    CreatedAt = DateTime.UtcNow
//                },
//                new Product
//                {
//                    Id = Guid.Parse("77777777-7777-7777-7777-777777777777"),
//                    Name = "Adidas Samba Classic",
//                    Description = "Iconic indoor soccer shoes",
//                    ShortDescription = "Samba Shoes",
//                    Price = 85,
//                    CategoryId = Guid.Parse("44444444-4444-4444-4444-444444444444"),
//                    BrandId = Guid.Parse("22222222-2222-2222-2222-222222222222"),
//                    GenderTarget = Gender.Unisex,
//                    IsActive = true,
//                    Sku = "SB-001",
//                    CreatedAt = DateTime.UtcNow
//                }
//            );

//            // ✅ Variants
//            modelBuilder.Entity<ProductVariant>().HasData(
//                new ProductVariant
//                {
//                    Id = Guid.Parse("88888888-8888-8888-8888-888888888888"),
//                    ProductId = Guid.Parse("66666666-6666-6666-6666-666666666666"),
//                    Sku = "UB-001-BLK-42",
//                    Size = "42",
//                    Color = "Black",
//                    StockQuantity = 50,
//                    PriceAdjustment = 0,
//                    IsActive = true,
//                    ImageUrl = "/images/products/samba-black-42.jpg"
//                },
//                new ProductVariant
//                {
//                    Id = Guid.Parse("99999999-9999-9999-9999-999999999999"),
//                    ProductId = Guid.Parse("77777777-7777-7777-7777-777777777777"),
//                    Sku = "SB-001-WHT-41",
//                    Size = "41",
//                    Color = "White",
//                    StockQuantity = 30,
//                    PriceAdjustment = 0,
//                    IsActive = true,
//                    ImageUrl = "/images/products/samba-black-42.jpg"
//                }
//            );

//            // ✅ Images
//            modelBuilder.Entity<ProductImage>().HasData(
//                new ProductImage
//                {
//                    Id = Guid.Parse("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
//                    ProductId = Guid.Parse("66666666-6666-6666-6666-666666666666"),
//                    ImageUrl = "/images/products/ultraboost-black.jpg",
//                    IsPrimary = true
//                },
//                new ProductImage
//                {
//                    Id = Guid.Parse("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
//                    ProductId = Guid.Parse("77777777-7777-7777-7777-777777777777"),
//                    ImageUrl = "/images/products/samba-white.jpg",
//                    IsPrimary = true
//                }
//            );

//        }
//    }
//}
using Microsoft.EntityFrameworkCore;
using Adidas.Models.Main;
using Adidas.Models.Feature;
using System;
using Adidas.Models.Separator;
using Models.People;
using Microsoft.AspNetCore.Identity;
using Adidas.Models.Operation;

namespace Adidas.Context.Seeds
{
    public static class AdidasDbContextSeed
    {
        public static void Seed(ModelBuilder modelBuilder)
        {
            // ✅ Admin Role Seed
            var adminRoleId = "99999999-aaaa-bbbb-cccc-111111111111";
            var adminRole = new IdentityRole
            {
                Id = adminRoleId,
                Name = "Admin",
                NormalizedName = "ADMIN"
            };
            modelBuilder.Entity<IdentityRole>().HasData(adminRole);

            // ✅ Admin User Seed
            var adminId = "aaaaaaaa-1111-2222-3333-444444444444";
            var hasher = new PasswordHasher<User>();
            var adminUser = new User
            {
                Id = adminId,
                Email = "admin@adidas.com",
                UserName = "admin@adidas.com",
                NormalizedEmail = "ADMIN@ADIDAS.COM",
                NormalizedUserName = "ADMIN@ADIDAS.COM",
                EmailConfirmed = true,
                IsActive = true,
                Phone = "0000000000",
                Role = UserRole.Admin,
                CreatedAt = DateTime.UtcNow,
                SecurityStamp = Guid.NewGuid().ToString()
            };
            adminUser.PasswordHash = hasher.HashPassword(adminUser, "Admin@123");
            modelBuilder.Entity<User>().HasData(adminUser);

            // ✅ Link Admin User to Admin Role
            modelBuilder.Entity<IdentityUserRole<string>>().HasData(new IdentityUserRole<string>
            {
                UserId = adminId,
                RoleId = adminRoleId
            });


            // ✅ Brands
            modelBuilder.Entity<Brand>().HasData(
                new Brand { Id = Guid.Parse("11111111-1111-1111-1111-111111111111"), Description = "Adidas Samba is one of the most iconic Adidas shoe lines.", Name = "Adidas", LogoUrl = "/images/brands/adidas-samba.png", IsActive = true },
                new Brand { Id = Guid.Parse("22222222-2222-2222-2222-222222222222"), Description = "Adidas Samba is one of the most iconic Adidas shoe lines.", Name = "Adidas Samba", LogoUrl = "/images/brands/adidas-samba.png", IsActive = true },
                new Brand { Id = Guid.Parse("33333333-3333-3333-3333-333333333333"), Description = "Adidas Samba is one of the most iconic Adidas shoe lines.", Name = "Adidas Originals", LogoUrl = "/images/brands/adidas-samba.png", IsActive = true }
            );

            // ✅ Categories
            modelBuilder.Entity<Category>().HasData(
                new Category
                {
                    Id = Guid.Parse("44444444-4444-4444-4444-444444444444"),
                    Name = "Shoes",
                    Slug = "shoes",
                    IsActive = true,
                    Description = "All types of Adidas shoes for men and women",
                    ImageUrl = "/images/categories/shoes.jpg"
                },
                new Category
                {
                    Id = Guid.Parse("55555555-5555-5555-5555-555555555555"),
                    Name = "Clothes",
                    Slug = "clothes",
                    IsActive = true,
                    Description = "Adidas clothing line including t-shirts, jackets and pants",
                    ImageUrl = "/images/categories/clothes.jpg"
                }
            );

            // ✅ Products
            modelBuilder.Entity<Product>().HasData(
                new Product
                {
                    Id = Guid.Parse("66666666-6666-6666-6666-666666666666"),
                    Name = "Adidas Ultraboost",
                    Description = "High performance running shoes",
                    ShortDescription = "Running Shoes",
                    Price = 120,
                    CategoryId = Guid.Parse("44444444-4444-4444-4444-444444444444"),
                    BrandId = Guid.Parse("11111111-1111-1111-1111-111111111111"),
                    GenderTarget = Gender.Unisex,
                    IsActive = true,
                    Sku = "UB-001",
                    CreatedAt = DateTime.UtcNow
                },
                new Product
                {
                    Id = Guid.Parse("77777777-7777-7777-7777-777777777777"),
                    Name = "Adidas Samba Classic",
                    Description = "Iconic indoor soccer shoes",
                    ShortDescription = "Samba Shoes",
                    Price = 85,
                    CategoryId = Guid.Parse("44444444-4444-4444-4444-444444444444"),
                    BrandId = Guid.Parse("22222222-2222-2222-2222-222222222222"),
                    GenderTarget = Gender.Unisex,
                    IsActive = true,
                    Sku = "SB-001",
                    CreatedAt = DateTime.UtcNow
                }
            );

            // ✅ Variants
            modelBuilder.Entity<ProductVariant>().HasData(
                new ProductVariant
                {
                    Id = Guid.Parse("88888888-8888-8888-8888-888888888888"),
                    ProductId = Guid.Parse("66666666-6666-6666-6666-666666666666"),
                    Sku = "UB-001-BLK-42",
                    Size = "42",
                    Color = "Black",
                    StockQuantity = 50,
                    PriceAdjustment = 0,
                    IsActive = true,
                    ImageUrl = "/images/products/samba-black-42.jpg"
                },
                new ProductVariant
                {
                    Id = Guid.Parse("99999999-9999-9999-9999-999999999999"),
                    ProductId = Guid.Parse("77777777-7777-7777-7777-777777777777"),
                    Sku = "SB-001-WHT-41",
                    Size = "41",
                    Color = "White",
                    StockQuantity = 30,
                    PriceAdjustment = 0,
                    IsActive = true,
                    ImageUrl = "/images/products/samba-black-42.jpg"
                }
            );

            // ✅ Images
            modelBuilder.Entity<ProductImage>().HasData(
                new ProductImage
                {
                    Id = Guid.Parse("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                    ProductId = Guid.Parse("66666666-6666-6666-6666-666666666666"),
                    ImageUrl = "/images/products/ultraboost-black.jpg",
                    IsPrimary = true
                },
                new ProductImage
                {
                    Id = Guid.Parse("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                    ProductId = Guid.Parse("77777777-7777-7777-7777-777777777777"),
                    ImageUrl = "/images/products/samba-white.jpg",
                    IsPrimary = true
                }
            );


            // ✅ Customer Role Seed
            var customerRoleId = "88888888-cccc-dddd-eeee-ffffffffffff";
            var customerRole = new IdentityRole
            {
                Id = customerRoleId,
                Name = "Customer",
                NormalizedName = "CUSTOMER"
            };
            modelBuilder.Entity<IdentityRole>().HasData(customerRole);

            // ✅ Create Customers
            var customer1Id = "11111111-aaaa-bbbb-cccc-111111111111";
            var customer1 = new User
            {
                Id = customer1Id,
                Email = "customer1@adidas.com",
                UserName = "customer1@adidas.com",
                NormalizedEmail = "CUSTOMER1@ADIDAS.COM",
                NormalizedUserName = "CUSTOMER1@ADIDAS.COM",
                EmailConfirmed = true,
                IsActive = true,
                Phone = "0100000001",
                Role = UserRole.Customer,
                CreatedAt = DateTime.UtcNow,
                SecurityStamp = Guid.Parse("00000000-stmp-stmp-stmp-000000000001").ToString()
            };
            customer1.PasswordHash = hasher.HashPassword(customer1, "Customer@123");

            var customer2Id = "22222222-aaaa-bbbb-cccc-222222222222";
            var customer2 = new User
            {
                Id = customer2Id,
                Email = "customer2@adidas.com",
                UserName = "customer2@adidas.com",
                NormalizedEmail = "CUSTOMER2@ADIDAS.COM",
                NormalizedUserName = "CUSTOMER2@ADIDAS.COM",
                EmailConfirmed = true,
                IsActive = true,
                Phone = "0100000002",
                Role = UserRole.Customer,
                CreatedAt = DateTime.UtcNow,
                SecurityStamp = Guid.Parse("00000000-stmp-stmp-stmp-000000000002").ToString()
            };
            customer2.PasswordHash = hasher.HashPassword(customer2, "Customer@123");

            var customer3Id = "33333333-aaaa-bbbb-cccc-333333333333";
            var customer3 = new User
            {
                Id = customer3Id,
                Email = "customer3@adidas.com",
                UserName = "customer3@adidas.com",
                NormalizedEmail = "CUSTOMER3@ADIDAS.COM",
                NormalizedUserName = "CUSTOMER3@ADIDAS.COM",
                EmailConfirmed = true,
                IsActive = true,
                Phone = "0100000003",
                Role = UserRole.Customer,
                CreatedAt = DateTime.UtcNow,
                SecurityStamp = Guid.Parse("00000000-stmp-stmp-stmp-000000000003").ToString()
            };
            customer3.PasswordHash = hasher.HashPassword(customer3, "Customer@123");

            // ✅ Add Customers to DB
            modelBuilder.Entity<User>().HasData(customer1, customer2, customer3);

            // ✅ Link Customers to Customer Role
            modelBuilder.Entity<IdentityUserRole<string>>().HasData(
                new IdentityUserRole<string> { UserId = customer1Id, RoleId = customerRoleId },
                new IdentityUserRole<string> { UserId = customer2Id, RoleId = customerRoleId },
                new IdentityUserRole<string> { UserId = customer3Id, RoleId = customerRoleId }
            );





            // ✅ Reviews assigned to customers
            modelBuilder.Entity<Review>().HasData(
                new Review
                {
                    Id = Guid.Parse("550e8400-e29b-41d4-a716-44665544000c"),
                    UserId = customer1Id,
                    ProductId = Guid.Parse("66666666-6666-6666-6666-666666666666"),
                    Title = "Fresh Review - Pending",
                    Rating = 4,
                    ReviewText = "Amazing shoes, waiting for approval!",
                    CreatedAt = DateTime.SpecifyKind(new DateTime(2025, 8, 4, 11, 00, 0), DateTimeKind.Utc),
                    IsApproved = false,
                    IsVerifiedPurchase = true
                },
                new Review
                {
                    Id = Guid.Parse("550e8400-e29b-41d4-a716-44665544000d"),
                    UserId = customer2Id,
                    ProductId = Guid.Parse("77777777-7777-7777-7777-777777777777"),
                    Title = "New Review - Pending",
                    Rating = 3,
                    ReviewText = "Good style, need to see more.",
                    CreatedAt = DateTime.SpecifyKind(new DateTime(2025, 8, 4, 10, 30, 0), DateTimeKind.Utc),
                    IsApproved = false,
                    IsVerifiedPurchase = false
                },
                new Review
                {
                    Id = Guid.Parse("550e8400-e29b-41d4-a716-44665544000e"),
                    UserId = customer3Id,
                    ProductId = Guid.Parse("66666666-6666-6666-6666-666666666666"),
                    Title = "Approved Feedback",
                    Rating = 5,
                    ReviewText = "",
                    CreatedAt = DateTime.SpecifyKind(new DateTime(2025, 8, 4, 10, 00, 0), DateTimeKind.Utc),
                    IsApproved = true,
                    IsVerifiedPurchase = true
                }
            );
        }
    }
}