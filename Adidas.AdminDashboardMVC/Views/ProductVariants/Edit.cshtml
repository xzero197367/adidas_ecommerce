@model Adidas.DTOs.Main.Product_Variant_DTOs.ProductVariantUpdateDto
@{
    ViewData["Title"] = "Edit Product Variant";
}

<!-- Enhanced CSS -->
<style>
    .edit-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 2rem 0;
        margin-bottom: 2rem;
        border-radius: 0 0 15px 15px;
    }

    .edit-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        text-shadow: 0 2px 4px rgba(0,0,0,0.3);
    }

    .edit-subtitle {
        font-size: 1.1rem;
        opacity: 0.9;
        margin-bottom: 1rem;
    }

    .breadcrumb-nav {
        background: rgba(255,255,255,0.1);
        backdrop-filter: blur(10px);
        border-radius: 25px;
        padding: 0.5rem 1rem;
        margin-top: 1rem;
        display: inline-flex;
        gap: 0.5rem;
        align-items: center;
    }

        .breadcrumb-nav a {
            color: rgba(255,255,255,0.8);
            text-decoration: none;
            transition: color 0.3s ease;
        }

            .breadcrumb-nav a:hover {
                color: white;
            }

    .wizard-card {
        border: none;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        overflow: hidden;
    }

    .form-section {
        background: #f8f9fa;
        border-radius: 12px;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        border-left: 4px solid #667eea;
    }

    .section-title {
        font-size: 1.2rem;
        font-weight: 600;
        color: #495057;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .section-icon {
        width: 30px;
        height: 30px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.9rem;
    }

    .form-control-enhanced {
        border: 2px solid #e9ecef;
        border-radius: 10px;
        padding: 0.75rem 1rem;
        transition: all 0.3s ease;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }

        .form-control-enhanced:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.15rem rgba(102, 126, 234, 0.25);
            transform: translateY(-1px);
        }

        .form-control-enhanced[readonly] {
            background: #f8f9fa;
            border-color: #dee2e6;
            color: #6c757d;
            cursor: not-allowed;
        }

    .current-image-container {
        background: white;
        border: 2px dashed #e9ecef;
        border-radius: 15px;
        padding: 2rem;
        text-align: center;
        transition: all 0.3s ease;
        margin-bottom: 1rem;
    }

        .current-image-container:hover {
            border-color: #667eea;
            background: #f8f9fa;
        }

    .current-image {
        max-width: 200px;
        max-height: 200px;
        border-radius: 12px;
        box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        transition: transform 0.3s ease;
    }

        .current-image:hover {
            transform: scale(1.05);
        }

    .no-image-placeholder {
        color: #6c757d;
        font-size: 1.1rem;
        padding: 2rem;
    }

    .file-upload-area {
        border: 2px dashed #e9ecef;
        border-radius: 15px;
        padding: 2rem;
        text-align: center;
        background: white;
        transition: all 0.3s ease;
        cursor: pointer;
        position: relative;
    }

        .file-upload-area:hover {
            border-color: #667eea;
            background: #f8f9fa;
        }

        .file-upload-area.drag-over {
            border-color: #28a745;
            background: #d1edff;
        }

    .upload-icon {
        font-size: 2rem;
        color: #6c757d;
        margin-bottom: 1rem;
    }

    .upload-text {
        color: #495057;
        font-weight: 500;
    }

    .upload-subtext {
        color: #6c757d;
        font-size: 0.9rem;
        margin-top: 0.5rem;
    }

    .stock-indicator {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        margin-top: 0.5rem;
        padding: 0.5rem;
        border-radius: 8px;
        font-size: 0.875rem;
        font-weight: 500;
    }

    .stock-high {
        background: #d1edff;
        color: #0c5aa0;
    }

    .stock-medium {
        background: #fff3cd;
        color: #856404;
    }

    .stock-low {
        background: #f8d7da;
        color: #721c24;
    }

    .stock-out {
        background: #e2e3e5;
        color: #383d41;
    }

    .price-preview {
        background: #e7f3ff;
        border: 1px solid #b8daff;
        border-radius: 8px;
        padding: 0.75rem;
        margin-top: 0.5rem;
        color: #004085;
        font-weight: 500;
    }

    .btn-edit {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 0.75rem 2rem;
        font-size: 1rem;
        font-weight: 600;
        border: none;
        border-radius: 20px;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
    }

        .btn-edit:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
            color: white;
        }

    .btn-loading {
        position: relative;
    }

        .btn-loading::after {
            content: '';
            position: absolute;
            width: 16px;
            height: 16px;
            margin: auto;
            border: 2px solid transparent;
            border-top-color: #ffffff;
            border-radius: 50%;
            animation: button-loading-spinner 1s ease infinite;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

     button-loading-spinner {
        from

    {
        transform: translate(-50%, -50%) rotate(0turn);
    }

    to {
        transform: translate(-50%, -50%) rotate(1turn);
    }

    }

    .progress-bar-container {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 3px;
        background: rgba(0,0,0,0.1);
        z-index: 1000;
    }

    .progress-bar-fill {
        height: 100%;
        width: 0;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        transition: width 0.3s ease;
    }

    (max-width: 768px) {
        .edit-title

    {
        font-size: 2rem;
    }

    .card-body {
        padding: 1.5rem;
    }

    .form-section {
        padding: 1rem;
    }

    .card-footer {
        flex-direction: column;
        gap: 1rem;
    }

    .btn-edit {
        width: 100%;
        justify-content: center;
    }

    }
</style>

<div class="progress-bar-container">
    <div class="progress-bar-fill" id="progressBar"></div>
</div>

<div class="edit-header">
    <div class="container">
        <h1 class="edit-title">
            <i class="fas fa-edit"></i>
            @ViewData["Title"]
        </h1>
        <p class="edit-subtitle">Update product variant details and specifications</p>
        <nav class="breadcrumb-nav">
            <a href="/" class="text-decoration-none"><i class="fas fa-home"></i> Home</a>
            <span>/</span>
            <a asp-action="Index" class="text-decoration-none"><i class="fas fa-box"></i> Product Variants</a>
            <span>/</span>
            <span>Edit Variant</span>
        </nav>
    </div>
</div>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-10 col-xl-8">
            <div class="card wizard-card">
                <div class="card-body p-4">
                    <!-- START FORM -->
                    <form asp-action="Edit" asp-controller="ProductVariants" method="post" enctype="multipart/form-data" id="editVariantForm">
                        <input type="hidden" asp-for="Id" />

                        <!-- Product Information Section -->
                        <div class="form-section" style="display: none;">
                            <h4 class="section-title">
                                <div class="section-icon">
                                    <i class="fas fa-tag"></i>
                                </div>
                                Product Information
                            </h4>

                            <div class="mb-3">
                                <label asp-for="ProductId" class="form-label fw-bold">
                                    <i class="fas fa-barcode me-1"></i>
                                    Product ID
                                </label>
                                <input asp-for="ProductId" class="form-control form-control-enhanced" readonly />
                                <small class="form-text text-muted">Product identifier (read-only)</small>
                            </div>
                        </div>

                        <!-- Variant Details Section -->
                        <div class="form-section">
                            <h4 class="section-title">
                                <div class="section-icon">
                                    <i class="fas fa-palette"></i>
                                </div>
                                Variant Details
                            </h4>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label asp-for="ColorHex" class="form-label">Choose Color *</label>
                                    <input asp-for="ColorHex" type="color" class="form-control form-control-color" id="ColorHexPicker" value="@Model.ColorHex" />
                                    <span asp-validation-for="ColorHex" class="text-danger"></span>
                                    <input type="hidden" asp-for="Color" id="ColorInput" />
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label asp-for="Size" class="form-label fw-bold">
                                        <i class="fas fa-ruler me-1"></i>
                                        Size <span class="text-danger">*</span>
                                    </label>
                                    <select asp-for="Size" class="form-select form-control-enhanced">
                                        <option value="">-- Select Size --</option>
                                        <option value="XS">XS</option>
                                        <option value="S">S</option>
                                        <option value="M">M</option>
                                        <option value="L">L</option>
                                        <option value="XL">XL</option>
                                        <option value="XXL">XXL</option>
                                    </select>
                                    <span asp-validation-for="Size" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Inventory & Pricing Section -->
                        <div class="form-section">
                            <h4 class="section-title">
                                <div class="section-icon">
                                    <i class="fas fa-chart-line"></i>
                                </div>
                                Inventory & Pricing
                            </h4>

                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label asp-for="StockQuantity" class="form-label fw-bold">
                                            <i class="fas fa-boxes me-1"></i>
                                            Stock Quantity <span class="text-danger">*</span>
                                        </label>
                                        <input asp-for="StockQuantity" class="form-control form-control-enhanced" type="number" min="0" id="stockInput" />
                                        <div id="stockIndicator" class="stock-indicator" style="display: none;"></div>
                                        <span asp-validation-for="StockQuantity" class="text-danger"></span>
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label asp-for="PriceAdjustment" class="form-label fw-bold">
                                            <i class="fas fa-dollar-sign me-1"></i>
                                            Price Adjustment
                                        </label>
                                        <input asp-for="PriceAdjustment" class="form-control form-control-enhanced" type="number" step="0.01" id="priceInput" />
                                        <small class="form-text text-muted">Additional cost (+) or discount (-)</small>
                                        <div id="pricePreview" class="price-preview" style="display: none;"></div>
                                        <span asp-validation-for="PriceAdjustment" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Image Management Section -->
                        <div class="form-section">
                            <h4 class="section-title">
                                <div class="section-icon">
                                    <i class="fas fa-camera"></i>
                                </div>
                                Image Management
                            </h4>

                            <div class="mb-3">
                                <label class="form-label fw-bold">
                                    <i class="fas fa-eye me-1"></i>
                                    Current Image
                                </label>
                                <div class="current-image-container">
                                    @if (!string.IsNullOrEmpty(Model.ImageUrl))
                                    {
                                        <img src="@Model.ImageUrl" alt="Current variant image" class="current-image" />
                                        <div class="mt-2 text-muted">
                                            <small>Current variant image</small>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="no-image-placeholder">
                                            <i class="fas fa-image fa-3x mb-3" style="color: #dee2e6;"></i>
                                            <p class="mb-0">No image available</p>
                                            <small>Upload an image below to add a visual representation</small>
                                        </div>
                                    }
                                </div>
                            </div>

                            <!-- Fixed file upload section -->
                            <div class="mb-3">
                                <label class="form-label fw-bold">
                                    <i class="fas fa-upload me-1"></i>
                                    Upload New Image (Optional)
                                </label>
                                <div class="file-upload-area" id="fileUploadArea">
                                    <input asp-for="ImageFile"
                                           type="file"
                                           class="form-control"
                                           id="imageFileInput"
                                           accept="image/*"
                                           style="position: absolute; opacity: 0; width: 100%; height: 100%; cursor: pointer;" />
                                    <div id="uploadAreaContent">
                                        <i class="upload-icon fas fa-cloud-upload-alt"></i>
                                        <div class="upload-text">Click to browse or drag and drop</div>
                                        <div class="upload-subtext">Supports: JPG, PNG, GIF • Max size: 5MB</div>
                                    </div>
                                </div>
                                <span asp-validation-for="ImageFile" class="text-danger"></span>

                                <div id="imagePreview" style="display: none; margin-top: 1rem;">
                                    <img id="previewImg" src="#" alt="Preview" style="max-width: 200px; max-height: 200px; border-radius: 12px; box-shadow: 0 4px 12px rgba(0,0,0,0.15);">
                                    <div class="mt-2">
                                        <button type="button" class="btn btn-sm btn-outline-danger" onclick="clearFileSelection()">
                                            <i class="fas fa-times"></i> Remove
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                    <!-- END FORM -->
                </div>

                <div class="card-footer bg-light text-center py-3">
                    <button type="submit" form="editVariantForm" class="btn-edit me-2" id="saveButton">
                        <i class="fas fa-save me-2"></i>
                        Save Changes
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-2"></i>
                        Back to List
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Fixed Scripts -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('editVariantForm');
        const progressBar = document.getElementById('progressBar');

        // Stock quantity indicator
        const stockInput = document.getElementById('stockInput');
        const stockIndicator = document.getElementById('stockIndicator');

        function updateStockIndicator() {
            const stock = parseInt(stockInput.value) || 0;
            let className = '';
            let text = '';
            let icon = '';

            if (stock > 10) {
                className = 'stock-high';
                text = 'High Stock Level';
                icon = 'fas fa-check-circle';
            } else if (stock > 5) {
                className = 'stock-medium';
                text = 'Medium Stock Level';
                icon = 'fas fa-exclamation-circle';
            } else if (stock > 0) {
                className = 'stock-low';
                text = 'Low Stock Level - Consider Restocking';
                icon = 'fas fa-exclamation-triangle';
            } else {
                className = 'stock-out';
                text = 'Out of Stock';
                icon = 'fas fa-times-circle';
            }

            stockIndicator.className = `stock-indicator ${className}`;
            stockIndicator.innerHTML = `<i class="${icon}"></i> ${text}`;
            stockIndicator.style.display = 'flex';
        }

        if (stockInput) {
            stockInput.addEventListener('input', updateStockIndicator);
            updateStockIndicator();
        }

        // Price adjustment preview
        const priceInput = document.getElementById('priceInput');
        const pricePreview = document.getElementById('pricePreview');

        function updatePricePreview() {
            const adjustment = parseFloat(priceInput.value) || 0;
            if (adjustment !== 0) {
                const type = adjustment > 0 ? 'surcharge' : 'discount';
                const amount = Math.abs(adjustment);
                pricePreview.innerHTML = `
                    <i class="fas fa-${adjustment > 0 ? 'plus' : 'minus'}-circle"></i>
                    ${adjustment > 0 ? '+' : '-'}$${amount.toFixed(2)} ${type} will be applied
                `;
                pricePreview.style.display = 'block';
            } else {
                pricePreview.style.display = 'none';
            }
        }

        if (priceInput) {
            priceInput.addEventListener('input', updatePricePreview);
            updatePricePreview();
        }

        // Fixed file upload handling
        const fileUploadArea = document.getElementById('fileUploadArea');
        const fileInput = document.getElementById('imageFileInput');
        const imagePreview = document.getElementById('imagePreview');
        const previewImg = document.getElementById('previewImg');
        const uploadAreaContent = document.getElementById('uploadAreaContent');

        // Prevent the click event from bubbling when clicking the file input
        fileInput.addEventListener('click', function(e) {
            e.stopPropagation();
        });

        // Handle clicks on the upload area
        fileUploadArea.addEventListener('click', function(e) {
            if (e.target !== fileInput) {
                fileInput.click();
            }
        });

        // Drag and drop handlers
        fileUploadArea.addEventListener('dragover', function(e) {
            e.preventDefault();
            e.stopPropagation();
            fileUploadArea.classList.add('drag-over');
        });

        fileUploadArea.addEventListener('dragleave', function(e) {
            e.preventDefault();
            e.stopPropagation();
            fileUploadArea.classList.remove('drag-over');
        });

        fileUploadArea.addEventListener('drop', function(e) {
            e.preventDefault();
            e.stopPropagation();
            fileUploadArea.classList.remove('drag-over');

            const files = e.dataTransfer.files;
            if (files.length > 0) {
                // Manually assign the files to the input
                fileInput.files = files;
                handleFileSelect(files[0]);
            }
        });

        // Handle file input change
        fileInput.addEventListener('change', function(e) {
            if (e.target.files && e.target.files.length > 0) {
                handleFileSelect(e.target.files[0]);
            } else {
                clearFileSelection();
            }
        });

        function handleFileSelect(file) {
            console.log('File selected:', file.name, file.size, file.type);

            // Validate file type
            if (!file.type.startsWith('image/')) {
                alert('Please select an image file.');
                fileInput.value = '';
                return;
            }

            // Validate file size (5MB max)
            if (file.size > 5 * 1024 * 1024) {
                alert('File size must be less than 5MB.');
                fileInput.value = '';
                return;
            }

            // Show preview
            const reader = new FileReader();
            reader.onload = function(e) {
                previewImg.src = e.target.result;
                imagePreview.style.display = 'block';

                // Update upload area text
                uploadAreaContent.innerHTML = `
                    <i class="upload-icon fas fa-check-circle" style="color: #28a745;"></i>
                    <div class="upload-text" style="color: #28a745;">File selected: ${file.name}</div>
                    <div class="upload-subtext">File size: ${(file.size / 1024 / 1024).toFixed(2)}MB</div>
                `;
            };
            reader.readAsDataURL(file);
        }

        function resetUploadAreaText() {
            uploadAreaContent.innerHTML = `
                <i class="upload-icon fas fa-cloud-upload-alt"></i>
                <div class="upload-text">Click to browse or drag and drop</div>
                <div class="upload-subtext">Supports: JPG, PNG, GIF • Max size: 5MB</div>
            `;
        }

        // Global function for clearing file selection
        window.clearFileSelection = function() {
            // Clear the file input
            fileInput.value = '';

            // Hide preview
            imagePreview.style.display = 'none';

            // Reset upload area text
            resetUploadAreaText();

            console.log('File selection cleared');
        }

        // Color picker handler
        const colorPicker = document.getElementById("ColorHexPicker");
        const colorInput = document.getElementById("ColorInput");

        if (colorPicker && colorInput) {
            colorPicker.addEventListener("input", function() {
                colorInput.value = colorPicker.value;
                console.log('Color updated:', colorPicker.value);
            });
        }

        // Enhanced form submission with validation
        const saveButton = document.getElementById('saveButton');

        form.addEventListener('submit', function(e) {
            console.log('Form submitting...');

            // Debug: Check the file input before submission
            if (fileInput.files && fileInput.files.length > 0) {
                console.log('✓ File attached:', fileInput.files[0].name, fileInput.files[0].size + ' bytes');
            } else {
                console.log('ℹ No new file selected - will use existing image');
            }

            // Validate required fields
            const requiredFields = ['Color', 'Size', 'StockQuantity'];
            let hasErrors = false;

            requiredFields.forEach(fieldName => {
                const field = form.querySelector(`[name="${fieldName}"]`);
                if (field && (!field.value || field.value.toString().trim() === '')) {
                    console.error(`❌ Required field missing: ${fieldName}`);
                    hasErrors = true;
                    field.classList.add('is-invalid');
                } else if (field) {
                    field.classList.remove('is-invalid');
                }
            });

            if (hasErrors) {
                e.preventDefault();
                alert('Please fill in all required fields before submitting.');
                return false;
            }

            // UI loading state
            saveButton.classList.add('btn-loading');
            saveButton.innerHTML = '<span style="opacity: 0;">Saving Changes...</span>';
            saveButton.disabled = true;
            progressBar.style.width = '100%';

            console.log('Form validation passed, submitting...');
        });

        // Progress tracking based on filled fields
        function updateProgress() {
            const requiredFields = ['Color', 'Size', 'StockQuantity'];
            let filledFields = 0;

            requiredFields.forEach(fieldName => {
                const field = form.querySelector(`[name="${fieldName}"]`);
                if (field && field.value.trim() !== '') {
                    filledFields++;
                }
            });

            const percentage = (filledFields / requiredFields.length) * 100;
            progressBar.style.width = percentage + '%';
        }

        // Add listeners to track progress
        const trackableFields = form.querySelectorAll('input, select, textarea');
        trackableFields.forEach(field => {
            if (field.type !== 'hidden' && field.type !== 'file') {
                field.addEventListener('input', updateProgress);
                field.addEventListener('change', updateProgress);
            }
        });

        updateProgress();
    });
</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}