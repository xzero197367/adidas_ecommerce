@using Adidas.Web.Controllers
@using static Adidas.Web.Controllers.ReviewsController
@model ReviewsIndexViewModel
@{
    ViewData["Title"] = "Product Reviews";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Content Header -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">Product Reviews</h1>
                <p class="text-muted">Moderate and manage customer reviews</p>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item">
                        <a asp-controller="Dashboard" asp-action="Index">Dashboard</a>
                    </li>
                    <li class="breadcrumb-item active">Reviews</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        <!-- Stats Cards -->
        <div class="row mb-4">
            <div class="col-lg-3 col-6">
                <div class="small-box bg-info stats-card">
                    <div class="inner">
                        <h3>@Model.Stats.TotalReviews.ToString("N0")</h3>
                        <p>All Reviews</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-star"></i>
                    </div>
                    <a asp-action="Index" asp-route-status="" class="small-box-footer text-white">
                        View All Reviews <i class="fas fa-arrow-circle-right"></i>
                    </a>
                </div>
            </div>
            <div class="col-lg-3 col-6">
                <div class="small-box bg-warning stats-card">
                    <div class="inner">
                        <h3>@Model.Stats.PendingReviews</h3>
                        <p>Pending</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-clock"></i>
                    </div>
                    <a asp-action="Index" asp-route-status="pending" class="small-box-footer text-white">
                        View Pending <i class="fas fa-arrow-circle-right"></i>
                    </a>
                </div>
            </div>
            <div class="col-lg-3 col-6">
                <div class="small-box bg-success stats-card">
                    <div class="inner">
                        <h3>@Model.Stats.ApprovedReviews.ToString("N0")</h3>
                        <p>Approved</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <a asp-action="Index" asp-route-status="approved" class="small-box-footer text-white">
                        View Approved <i class="fas fa-arrow-circle-right"></i>
                    </a>
                </div>
            </div>
            <div class="col-lg-3 col-6">
                <div class="small-box bg-danger stats-card">
                    <div class="inner">
                        <h3>@Model.Stats.RejectedReviews</h3>
                        <p>Rejected</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-times-circle"></i>
                    </div>
                    <a asp-action="Index" asp-route-status="rejected" class="small-box-footer text-white">
                        View Rejected <i class="fas fa-arrow-circle-right"></i>
                    </a>
                </div>
            </div>
        </div>

        <!-- Filter Form -->
        <div class="card mb-4">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="fas fa-filter mr-2"></i>Filter Reviews
                </h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">
                <form asp-action="Index" method="get" id="filterForm">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label asp-for="Status"><i class="fas fa-list mr-1"></i>Status</label>
                                <select asp-for="Status" class="form-control">
                                    <option value="">All Reviews</option>
                                    <option value="pending">Pending</option>
                                    <option value="approved">Approved</option>
                                    <option value="rejected">Rejected</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label asp-for="Rating"><i class="fas fa-star mr-1"></i>Rating</label>
                                <select asp-for="Rating" class="form-control">
                                    <option value="">All Ratings</option>
                                    <option value="5">⭐⭐⭐⭐⭐ 5 Stars</option>
                                    <option value="4">⭐⭐⭐⭐ 4 Stars</option>
                                    <option value="3">⭐⭐⭐ 3 Stars</option>
                                    <option value="2">⭐⭐ 2 Stars</option>
                                    <option value="1">⭐ 1 Star</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label asp-for="SearchTerm"><i class="fas fa-search mr-1"></i>Search</label>
                                <input asp-for="SearchTerm" class="form-control" placeholder="Search reviews by content " />
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>&nbsp;</label>
                                <div class="d-flex">
                                    <button type="submit" class="btn btn-primary mr-2">
                                        <i class="fas fa-filter mr-1"></i> Apply Filter
                                    </button>
                                    <a asp-action="Index" class="btn btn-secondary">
                                        <i class="fas fa-times mr-1"></i> Clear
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label asp-for="StartDate"><i class="fas fa-calendar-alt mr-1"></i>From Date</label>
                                <input asp-for="StartDate" type="date" class="form-control" />
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label asp-for="EndDate"><i class="fas fa-calendar-check mr-1"></i>To Date</label>
                                <input asp-for="EndDate" type="date" class="form-control" />
                            </div>
                        </div>
                       
                       
                    </div>
                    <!-- Hidden field to maintain current page -->
                    <input asp-for="CurrentPage" type="hidden" />
                </form>
            </div>
        </div>

        <!-- Reviews Table Card -->
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">
                    <span>Reviews (@Model.Reviews.TotalCount total)</span>
                    @if (!string.IsNullOrEmpty(Model.Status))
                    {
                        <span class="badge badge-secondary ml-2">
                            @(Model.Status.Substring(0, 1).ToUpper() + Model.Status.Substring(1)) Reviews
                        </span>
                    }
                </h3>
                <div class="card-tools">
                    <form asp-action="BulkAction" method="post" id="bulkActionForm" style="display: none;">
                        <div class="btn-group">
                            <button type="submit" name="action" value="approve" class="btn btn-success btn-sm" id="bulkApprove">
                                <i class="fas fa-check mr-1"></i> Approve Selected
                            </button>
                            <button type="button" class="btn btn-warning btn-sm" id="bulkRejectBtn">
                                <i class="fas fa-times mr-1"></i> Reject Selected
                            </button>
                            <button type="button" class="btn btn-secondary btn-sm" id="clearSelection">
                                <i class="fas fa-times mr-1"></i> Clear
                            </button>
                        </div>
                        <span class="ml-2 text-muted"><span id="selectedCount">0</span> selected</span>
                    </form>
                </div>
            </div>
            <div class="card-body p-0">
                @if (Model.Reviews.Items.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-striped table-hover mb-0">
                            <thead class="thead-light">
                                <tr>
                                    <th style="width: 20px;">
                                        <input type="checkbox" id="selectAll" aria-label="Select all reviews">
                                    </th>
                                    <th><i class="fas fa-user mr-1"></i>Customer</th>
                                    <th><i class="fas fa-box mr-1"></i>Product</th>
                                    <th><i class="fas fa-star mr-1"></i>Rating</th>
                                    <th><i class="fas fa-comment mr-1"></i>Review</th>
                                    <th><i class="fas fa-calendar mr-1"></i>Date</th>
                                    <th><i class="fas fa-info-circle mr-1"></i>Status</th>
                                    <th style="width: 150px;"><i class="fas fa-cogs mr-1"></i>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var review in Model.Reviews.Items)
                                {
                                    <tr>
                                        <td class="text-center">
                                            <input type="checkbox" class="review-checkbox" value="@review.Id" aria-label="Select review">
                                        </td>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <div class="user-avatar mr-2">
                                                    <i class="fas fa-user-circle fa-2x text-muted"></i>
                                                </div>
                                                <div>
                                                    <div class="font-weight-bold">@review.UserId</div>
                                                    <small class="text-muted">@review.UserId</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <div class="product-thumb mr-2">
                                                    <i class="fas fa-cube fa-2x text-muted"></i>
                                                </div>
                                                <div>
                                                    <div class="font-weight-bold">Product Name</div>
                                                    <small class="text-muted">ID: @review.ProductId.ToString().Substring(0, 8)...</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="text-center">
                                            <div class="rating-display">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    if (i <= review.Rating)
                                                    {
                                                        <i class="fas fa-star text-warning"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="far fa-star text-muted"></i>
                                                    }
                                                }
                                                <br>
                                                <span class="badge badge-info">@review.Rating.0</span>
                                            </div>
                                        </td>
                                        <td>
                                            @if (string.IsNullOrEmpty(review.ReviewText))
                                            {
                                                <span class="text-muted font-italic">No comment provided</span>
                                            }
                                            else
                                            {
                                                var truncated = review.ReviewText.Length > 80 ?
                                                review.ReviewText.Substring(0, 80) + "..." : review.ReviewText;
                                                <span class="review-text" title="@review.ReviewText">@truncated</span>
                                            }
                                        </td>
                                        <td class="text-center">
                                            <span class="text-nowrap">
                                                <i class="fas fa-calendar-alt text-muted mr-1"></i>
                                                @((review.CreatedAt ).ToString("MMM dd, yyyy"))
                                            </span>
                                        </td>
                                        <td class="text-center">
                                            @{
                                                string badgeClass = "";
                                                string icon = "";
                                                string statusText = "";

                                                if (review.IsDeleted)
                                                {
                                                    badgeClass = "badge-dark";
                                                    icon = "fas fa-trash";
                                                    statusText = "Deleted";
                                                }
                                                else if (review.IsApproved)
                                                {
                                                    badgeClass = "badge-success";
                                                    icon = "fas fa-check-circle";
                                                    statusText = "Approved";
                                                }
                                                else if (!review.IsActive)
                                                {
                                                    badgeClass = "badge-danger";
                                                    icon = "fas fa-times-circle";
                                                    statusText = "Rejected";
                                                }
                                                else
                                                {
                                                    badgeClass = "badge-warning";
                                                    icon = "fas fa-clock";
                                                    statusText = "Pending";
                                                }
                                            }
                                            <span class="badge @badgeClass">
                                                <i class="@icon"></i> @statusText
                                            </span>
                                            @if (review.IsVerifiedPurchase)
                                            {
                                                <br>
                                                <small class="badge badge-info mt-1">
                                                    <i class="fas fa-shield-alt"></i> Verified
                                                </small>
                                            }
                                        </td>
                                        <td class="text-center">
                                            <div class="btn-group" role="group" aria-label="Review actions">
                                                <a asp-action="Details" asp-route-id="@review.Id"
                                                   class="btn btn-sm btn-outline-info" title="View Details" data-toggle="tooltip">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                @if (!review.IsApproved && !review.IsDeleted && review.IsActive)
                                                {
                                                    <button type="button" class="btn btn-sm btn-success approve-btn"
                                                            data-id="@review.Id" title="Approve" data-toggle="tooltip">
                                                        <i class="fas fa-check"></i>
                                                    </button>
                                                    @* <button type="button" class="btn btn-sm btn-warning reject-btn" *@
                                                    @*         data-id="@review.Id" title="Reject" data-toggle="tooltip"> *@
                                                    @*     <i class="fas fa-times"></i> *@
                                                    @* </button> *@
                                                }
                                                @* @if (!review.IsDeleted) *@
                                                @* { *@
                                                @*     <button type="button" class="btn btn-sm btn-outline-danger delete-btn" *@
                                                @*             data-id="@review.Id" title="Delete" data-toggle="tooltip"> *@
                                                @*         <i class="fas fa-trash"></i> *@
                                                @*     </button> *@
                                                @* } *@
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center py-5">
                        <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                        <h5 class="text-muted">No reviews found</h5>
                        <p class="text-muted">
                            @if (!string.IsNullOrEmpty(Model.Status) || !string.IsNullOrEmpty(Model.SearchTerm))
                            {
                                <text>Try adjusting your filters or </text>
                                <a asp-action="Index">clear all filters</a>
                            }
                            else
                            {
                                <text>There are no reviews to display at the moment.</text>
                            }
                        </p>
                    </div>
                }
            </div>
            @if (Model.Reviews.Items.Any())
            {
                <!-- Pagination -->
                <div class="card-footer">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <small class="text-muted">
                                Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) to
                                @Math.Min(Model.CurrentPage * Model.PageSize, Model.Reviews.TotalCount)
                                of @Model.Reviews.TotalCount reviews
                            </small>
                        </div>
                        <div class="col-md-6">
                            @{
                                var totalPages = Model.Reviews.TotalPages;
                                var currentPage = Model.CurrentPage;
                                var startPage = Math.Max(1, currentPage - 2);
                                var endPage = Math.Min(totalPages, currentPage + 2);
                            }

                            @if (totalPages > 1)
                            {
                                <nav aria-label="Reviews pagination">
                                    <ul class="pagination pagination-sm justify-content-end mb-0">
                                        <!-- Previous Page -->
                                        @if (currentPage > 1)
                                        {
                                            <li class="page-item">
                                                <a asp-action="Index"
                                                   asp-route-page="@(currentPage - 1)"
                                                   asp-route-pageSize="@Model.PageSize"
                                                   asp-route-status="@Model.Status"
                                                   asp-route-searchTerm="@Model.SearchTerm"
                                                   asp-route-rating="@Model.Rating"
                                                   asp-route-startDate="@Model.StartDate?.ToString("yyyy-MM-dd")"
                                                   asp-route-endDate="@Model.EndDate?.ToString("yyyy-MM-dd")"
                                                   class="page-link" aria-label="Previous">
                                                    <i class="fas fa-chevron-left"></i>
                                                </a>
                                            </li>
                                        }
                                        else
                                        {
                                            <li class="page-item disabled">
                                                <span class="page-link"><i class="fas fa-chevron-left"></i></span>
                                            </li>
                                        }

                                        <!-- First Page -->
                                        @if (startPage > 1)
                                        {
                                            <li class="page-item">
                                                <a asp-action="Index"
                                                   asp-route-page="1"
                                                   asp-route-pageSize="@Model.PageSize"
                                                   asp-route-status="@Model.Status"
                                                   asp-route-searchTerm="@Model.SearchTerm"
                                                   asp-route-rating="@Model.Rating"
                                                   asp-route-startDate="@Model.StartDate?.ToString("yyyy-MM-dd")"
                                                   asp-route-endDate="@Model.EndDate?.ToString("yyyy-MM-dd")"
                                                   class="page-link">1</a>
                                            </li>
                                            @if (startPage > 2)
                                            {
                                                <li class="page-item disabled">
                                                    <span class="page-link">...</span>
                                                </li>
                                            }
                                        }

                                        <!-- Page Numbers -->
                                        @for (int i = startPage; i <= endPage; i++)
                                        {
                                            <li class="page-item @(i == currentPage ? "active" : "")">
                                                @if (i == currentPage)
                                                {
                                                    <span class="page-link">@i <span class="sr-only">(current)</span></span>
                                                }
                                                else
                                                {
                                                    <a asp-action="Index"
                                                       asp-route-page="@i"
                                                       asp-route-pageSize="@Model.PageSize"
                                                       asp-route-status="@Model.Status"
                                                       asp-route-searchTerm="@Model.SearchTerm"
                                                       asp-route-rating="@Model.Rating"
                                                       asp-route-startDate="@Model.StartDate?.ToString("yyyy-MM-dd")"
                                                       asp-route-endDate="@Model.EndDate?.ToString("yyyy-MM-dd")"
                                                       class="page-link">@i</a>
                                                }
                                            </li>
                                        }

                                        <!-- Last Page -->
                                        @if (endPage < totalPages)
                                        {
                                            @if (endPage < totalPages - 1)
                                            {
                                                <li class="page-item disabled">
                                                    <span class="page-link">...</span>
                                                </li>
                                            }
                                            <li class="page-item">
                                                <a asp-action="Index"
                                                   asp-route-page="@totalPages"
                                                   asp-route-pageSize="@Model.PageSize"
                                                   asp-route-status="@Model.Status"
                                                   asp-route-searchTerm="@Model.SearchTerm"
                                                   asp-route-rating="@Model.Rating"
                                                   asp-route-startDate="@Model.StartDate?.ToString("yyyy-MM-dd")"
                                                   asp-route-endDate="@Model.EndDate?.ToString("yyyy-MM-dd")"
                                                   class="page-link">@totalPages</a>
                                            </li>
                                        }

                                        <!-- Next Page -->
                                        @if (currentPage < totalPages)
                                        {
                                            <li class="page-item">
                                                <a asp-action="Index"
                                                   asp-route-page="@(currentPage + 1)"
                                                   asp-route-pageSize="@Model.PageSize"
                                                   asp-route-status="@Model.Status"
                                                   asp-route-searchTerm="@Model.SearchTerm"
                                                   asp-route-rating="@Model.Rating"
                                                   asp-route-startDate="@Model.StartDate?.ToString("yyyy-MM-dd")"
                                                   asp-route-endDate="@Model.EndDate?.ToString("yyyy-MM-dd")"
                                                   class="page-link" aria-label="Next">
                                                    <i class="fas fa-chevron-right"></i>
                                                </a>
                                            </li>
                                        }
                                        else
                                        {
                                            <li class="page-item disabled">
                                                <span class="page-link"><i class="fas fa-chevron-right"></i></span>
                                            </li>
                                        }
                                    </ul>
                                </nav>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</section>

<!-- Reject Modal -->
<div class="modal fade" id="rejectModal" tabindex="-1" role="dialog" aria-labelledby="rejectModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form id="rejectForm">
                <div class="modal-header bg-warning">
                    <h5 class="modal-title text-white" id="rejectModalLabel">
                        <i class="fas fa-exclamation-triangle mr-2"></i>Reject Review
                    </h5>
                    <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-warning">
                        <i class="fas fa-info-circle mr-2"></i>
                        <strong>Important:</strong> Please provide a clear reason for rejecting this review.
                    </div>
                    <div class="form-group">
                        <label for="rejectReason">
                            <i class="fas fa-comment-alt mr-1"></i>Reason for rejection
                            <span class="text-danger">*</span>
                        </label>
                        <textarea class="form-control" id="rejectReason" name="reason" rows="4"
                                  placeholder="Please provide a detailed reason for rejecting this review..." required></textarea>
                        <small class="form-text text-muted">
                            Common reasons: Inappropriate content, spam, fake review, off-topic, etc.
                        </small>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">
                        <i class="fas fa-times mr-1"></i>Cancel
                    </button>
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-times mr-1"></i>Reject Review
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            let selectedReviews = [];
            let currentReviewId = null;

            // Initialize tooltips
            $('[data-toggle="tooltip"]').tooltip();

            // Select All functionality
            $('#selectAll').change(function() {
                const isChecked = $(this).is(':checked');
                $('.review-checkbox').prop('checked', isChecked);
                updateSelectedReviews();
            });

            // Individual checkbox change
            $(document).on('change', '.review-checkbox', function() {
                updateSelectedReviews();
                updateSelectAllState();
            });

            // Clear selection
            $('#clearSelection').click(function() {
                $('.review-checkbox').prop('checked', false);
                $('#selectAll').prop('checked', false);
                updateSelectedReviews();
            });

            // Approve button
            $(document).on('click', '.approve-btn', function() {
                const reviewId = $(this).data('id');
                if (confirm('Are you sure you want to approve this review?')) {
                    approveReview(reviewId);
                }
            });

            // Reject button
            $(document).on('click', '.reject-btn', function() {
                currentReviewId = $(this).data('id');
                $('#rejectModal').modal('show');
            });

            // Delete button
            $(document).on('click', '.delete-btn', function() {
                const reviewId = $(this).data('id');
                if (confirm('Are you sure you want to delete this review? This action cannot be undone.')) {
                    deleteReview(reviewId);
                }
            });

            // Bulk reject button
            $('#bulkRejectBtn').click(function() {
                if (selectedReviews.length === 0) {
                    showToast('warning', 'Please select reviews to reject.');
                    return;
                }
                currentReviewId = 'bulk';
                $('#rejectModal').modal('show');
            });

            // Reject form submission
            $('#rejectForm').submit(function(e) {
                e.preventDefault();
                const reason = $('#rejectReason').val().trim();

                if (!reason) {
                    showToast('error', 'Please provide a reason for rejection.');
                    return;
                }

                if (currentReviewId === 'bulk') {
                    bulkRejectReviews(reason);
                } else {
                    rejectReview(currentReviewId, reason);
                }

                $('#rejectModal').modal('hide');
                $('#rejectReason').val('');
                currentReviewId = null;
            });

            // Bulk approve
            $('#bulkApprove').click(function(e) {
                e.preventDefault();
                if (selectedReviews.length === 0) {
                    showToast('warning', 'Please select reviews to approve.');
                    return;
                }
                if (confirm(`Are you sure you want to approve ${selectedReviews.length} selected reviews?`)) {
                    bulkApproveReviews();
                }
            });

            function updateSelectedReviews() {
                selectedReviews = $('.review-checkbox:checked').map(function() {
                    return $(this).val();
                }).get();

                $('#selectedCount').text(selectedReviews.length);
                $('#bulkActionForm').toggle(selectedReviews.length > 0);
            }

            function updateSelectAllState() {
                const totalCheckboxes = $('.review-checkbox').length;
                const checkedCheckboxes = $('.review-checkbox:checked').length;

                $('#selectAll').prop('indeterminate', checkedCheckboxes > 0 && checkedCheckboxes < totalCheckboxes);
                $('#selectAll').prop('checked', checkedCheckboxes === totalCheckboxes && totalCheckboxes > 0);
            }

            function approveReview(reviewId) {
                $.ajax({
                    url: '@Url.Action("Approve", "Reviews")/' + reviewId,
                    type: 'POST',
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            setTimeout(() => window.location.reload(), 1000);
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'An error occurred. Please try again.');
                    }
                });
            }

            function rejectReview(reviewId, reason) {
                $.ajax({
                    url: '@Url.Action("Reject", "Reviews")/' + reviewId,
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ reason: reason }),
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            setTimeout(() => window.location.reload(), 1000);
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'An error occurred while rejecting the review.');
                    }
                });
            }

            function deleteReview(reviewId) {
                $.ajax({
                    url: '@Url.Action("Delete", "Reviews")/' + reviewId,
                    type: 'DELETE',
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            setTimeout(() => window.location.reload(), 1000);
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'An error occurred while deleting the review.');
                    }
                });
            }

            function bulkApproveReviews() {
                $.ajax({
                    url: '@Url.Action("BulkAction", "Reviews")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        reviewIds: selectedReviews,
                        action: 'approve'
                    }),
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            setTimeout(() => window.location.reload(), 1000);
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'An error occurred during bulk approval.');
                    }
                });
            }

            function bulkRejectReviews(reason) {
                $.ajax({
                    url: '@Url.Action("BulkAction", "Reviews")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        reviewIds: selectedReviews,
                        action: 'reject',
                        reason: reason
                    }),
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            setTimeout(() => window.location.reload(), 1000);
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'An error occurred during bulk rejection.');
                    }
                });
            }

            function showToast(type, message) {
                const toastClass = {
                    'success': 'alert-success',
                    'error': 'alert-danger',
                    'warning': 'alert-warning',
                    'info': 'alert-info'
                }[type] || 'alert-info';

                const iconClass = {
                    'success': 'fa-check-circle',
                    'error': 'fa-exclamation-circle',
                    'warning': 'fa-exclamation-triangle',
                    'info': 'fa-info-circle'
                }[type] || 'fa-info-circle';

                const toast = $(`
                    <div class="alert ${toastClass} alert-dismissible fade show position-fixed shadow-lg"
                         style="top: 20px; right: 20px; z-index: 10000; min-width: 350px; max-width: 500px;" role="alert">
                        <i class="fas ${iconClass} mr-2"></i>
                        <strong>${type.charAt(0).toUpperCase() + type.slice(1)}:</strong> ${message}
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                `);

                $('body').append(toast);
                setTimeout(() => toast.alert('close'), 5000);
            }

            // Initialize page state
            updateSelectedReviews();
            updateSelectAllState();

            // Auto-submit form when changing page size
            $('select[name="PageSize"]').change(function() {
                $('#filterForm').submit();
            });

            // Reset page to 1 when changing filters
            $('#filterForm input, #filterForm select').not('input[name="PageSize"]').change(function() {
                $('input[name="CurrentPage"]').val(1);
            });
        });
    </script>

    @Html.AntiForgeryToken()
}

