@using Adidas.Web.Controllers
@model ReviewsIndexViewModel
@{
    ViewData["Title"] = "Product Reviews";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">
    <!-- Content Header -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Product Reviews</h1>
                    <p class="text-muted">Moderate and manage customer reviews</p>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")">Dashboard</a></li>
                        <li class="breadcrumb-item active">Reviews</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <!-- Stats Cards -->
            <div class="row mb-4">
                <div class="col-lg-3 col-6">
                    <div class="small-box bg-info">
                        <div class="inner">
                            <h3>@Model.Stats.TotalReviews.ToString("N0")</h3>
                            <p>Total Reviews</p>
                        </div>
                        <div class="icon">
                            <i class="fas fa-star"></i>
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-6">
                    <div class="small-box bg-warning">
                        <div class="inner">
                            <h3>@Model.Stats.PendingReviews</h3>
                            <p>Pending</p>
                        </div>
                        <div class="icon">
                            <i class="fas fa-clock"></i>
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-6">
                    <div class="small-box bg-success">
                        <div class="inner">
                            <h3>@Model.Stats.ApprovedReviews.ToString("N0")</h3>
                            <p>Approved</p>
                        </div>
                        <div class="icon">
                            <i class="fas fa-check-circle"></i>
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-6">
                    <div class="small-box bg-danger">
                        <div class="inner">
                            <h3>@((Model.Stats.TotalReviews - Model.Stats.ApprovedReviews - Model.Stats.PendingReviews))</h3>
                            <p>Rejected</p>
                        </div>
                        <div class="icon">
                            <i class="fas fa-times-circle"></i>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Reviews Table Card -->
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Recent Reviews</h3>
                    <div class="card-tools">
                        <div class="input-group input-group-sm" style="width: 250px;">
                            <div class="dropdown mr-2">
                                <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button" id="statusFilter" data-toggle="dropdown">
                                    All Reviews
                                </button>
                                <div class="dropdown-menu">
                                    <a class="dropdown-item filter-status" href="#" data-status="">All Reviews</a>
                                    <a class="dropdown-item filter-status" href="#" data-status="pending">Pending</a>
                                    <a class="dropdown-item filter-status" href="#" data-status="approved">Approved</a>
                                    <a class="dropdown-item filter-status" href="#" data-status="rejected">Rejected</a>
                                </div>
                            </div>
                            <button type="button" class="btn btn-info btn-sm" id="filterBtn">
                                <i class="fas fa-filter"></i> Filter
                            </button>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <!-- Bulk Actions -->
                    <div class="row mb-3" id="bulkActions" style="display: none;">
                        <div class="col-12">
                            <div class="alert alert-info">
                                <span id="selectedCount">0</span> reviews selected
                                <div class="float-right">
                                    <button class="btn btn-success btn-sm" id="bulkApprove">
                                        <i class="fas fa-check"></i> Approve Selected
                                    </button>
                                    <button class="btn btn-warning btn-sm" id="bulkReject">
                                        <i class="fas fa-times"></i> Reject Selected
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- DataTable -->
                    <table id="reviewsTable" class="table table-bordered table-striped" style="width:100%">
                        <thead>
                            <tr>
                                <th style="width: 20px;">
                                    <input type="checkbox" id="selectAll" aria-label="Select all reviews">
                                </th>
                                <th>Customer</th>
                                <th>Product</th>
                                <th>Rating</th>
                                <th>Review</th>
                                <th>Date</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- DataTable will populate this -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </section>
</div>

<!-- Filter Modal -->
<div class="modal fade" id="filterModal" tabindex="-1" role="dialog" aria-labelledby="filterModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="filterModalLabel">Filter Reviews</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="filterForm">
                    <div class="form-group">
                        <label for="statusSelect">Status</label>
                        <select class="form-control" id="statusSelect" name="status">
                            <option value="">All Reviews</option>
                            <option value="pending">Pending</option>
                            <option value="approved">Approved</option>
                            <option value="rejected">Rejected</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="ratingSelect">Rating</label>
                        <select class="form-control" id="ratingSelect" name="rating">
                            <option value="">All Ratings</option>
                            <option value="5">5 Stars</option>
                            <option value="4">4 Stars</option>
                            <option value="3">3 Stars</option>
                            <option value="2">2 Stars</option>
                            <option value="1">1 Star</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="searchInput">Search</label>
                        <input type="text" class="form-control" id="searchInput" name="search" placeholder="Search reviews, customers, products...">
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="startDate">Start Date</label>
                                <input type="date" class="form-control" id="startDate" name="startDate">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="endDate">End Date</label>
                                <input type="date" class="form-control" id="endDate" name="endDate">
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="applyFilter">Apply Filter</button>
                <button type="button" class="btn btn-outline-secondary" id="clearFilter">Clear All</button>
            </div>
        </div>
    </div>
</div>

<!-- Reject Modal -->
<div class="modal fade" id="rejectModal" tabindex="-1" role="dialog" aria-labelledby="rejectModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="rejectModalLabel">Reject Review</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="rejectForm">
                    <div class="form-group">
                        <label for="rejectReason">Reason for rejection</label>
                        <textarea class="form-control" id="rejectReason" rows="3" placeholder="Please provide a reason for rejecting this review..." required></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmReject">Reject Review</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- DataTables -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/datatables/1.10.21/css/dataTables.bootstrap4.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/datatables/1.10.21/js/jquery.dataTables.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/datatables/1.10.21/js/dataTables.bootstrap4.min.js"></script>

    <script>
        $(document).ready(function() {
            let table;
            let selectedReviews = [];
            let currentReviewId = null;

            // Initialize DataTable
            initializeDataTable();

            // Event Handlers
            $('#filterBtn').click(() => $('#filterModal').modal('show'));
            $('#applyFilter').click(applyFilters);
            $('#clearFilter').click(clearFilters);
            $('#selectAll').change(handleSelectAll);
            $('#bulkApprove').click(() => performBulkAction('approve'));
            $('#bulkReject').click(() => showBulkRejectModal());
            $('#confirmReject').click(handleRejectConfirm);

            // Filter by status dropdown
            $('.filter-status').click(function(e) {
                e.preventDefault();
                const status = $(this).data('status');
                const text = $(this).text();
                $('#statusFilter').text(text);
                table.column(6).search(status).draw();
            });

            function initializeDataTable() {
                table = $('#reviewsTable').DataTable({
                    processing: true,
                    serverSide: true,
                    ajax: {
                        url: '@Url.Action("GetReviewsData", "Reviews")',
                        type: 'GET',
                        data: function(d) {
                            d.status = $('#statusSelect').val();
                            d.rating = $('#ratingSelect').val();
                            d.searchValue = $('#searchInput').val();
                            d.startDate = $('#startDate').val();
                            d.endDate = $('#endDate').val();
                        }
                    },
                    columns: [
                        {
                            data: null,
                            orderable: false,
                            render: function(data, type, row) {
                                return `<input type="checkbox" class="review-checkbox" data-id="${row.id}" aria-label="Select review">`;
                            }
                        },
                        {
                            data: 'customer',
                            render: function(data, type, row) {
                                return `
                                    <div class="d-flex align-items-center">
                                        <img src="/images/default-avatar.png" alt="Avatar" class="img-circle img-size-32 mr-2">
                                        <div>
                                            <div class="font-weight-bold">${data.name}</div>
                                            <small class="text-muted">${data.email}</small>
                                        </div>
                                    </div>
                                `;
                            }
                        },
                        {
                            data: 'product',
                            render: function(data, type, row) {
                                return `
                                    <div class="d-flex align-items-center">
                                        <img src="/images/products/default.jpg" alt="Product" class="img-size-32 mr-2">
                                        <div>
                                            <div class="font-weight-bold">${data.name}</div>
                                            <small class="text-muted">ID: ${data.id.substring(0, 8)}...</small>
                                        </div>
                                    </div>
                                `;
                            }
                        },
                        {
                            data: 'rating',
                            render: function(data, type, row) {
                                let stars = '';
                                for (let i = 1; i <= 5; i++) {
                                    stars += i <= data
                                        ? '<i class="fas fa-star text-warning"></i>'
                                        : '<i class="far fa-star text-muted"></i>';
                                }
                                return `<div>${stars} <span class="ml-1">${data}.0</span></div>`;
                            }
                        },
                        {
                            data: 'review',
                            render: function(data, type, row) {
                                if (!data) return '<span class="text-muted">No comment</span>';
                                return `<span title="${data}">${data}</span>`;
                            }
                        },
                        {
                            data: 'date',
                            render: function(data, type, row) {
                                return `<span class="text-nowrap">${data}</span>`;
                            }
                        },
                        {
                            data: 'status',
                            render: function(data, type, row) {
                                const badgeClass = row.isApproved
                                    ? 'badge-success'
                                    : 'badge-warning';
                                const icon = row.isApproved
                                    ? 'fas fa-check-circle'
                                    : 'fas fa-clock';

                                let badges = `<span class="badge ${badgeClass}"><i class="${icon}"></i> ${data}</span>`;

                                if (row.isVerifiedPurchase) {
                                    badges += '<br><small class="badge badge-info mt-1"><i class="fas fa-shield-alt"></i> Verified</small>';
                                }

                                return badges;
                            }
                        },
                        {
                            data: null,
                            orderable: false,
                            render: function(data, type, row) {
                                let actions = `
                                    <div class="btn-group" role="group" aria-label="Review actions">
                                        <button class="btn btn-sm btn-outline-info view-btn" data-id="${row.id}" title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                `;

                                if (!row.isApproved) {
                                    actions += `
                                        <button class="btn btn-sm btn-success approve-btn" data-id="${row.id}" title="Approve">
                                            <i class="fas fa-check"></i>
                                        </button>
                                        <button class="btn btn-sm btn-warning reject-btn" data-id="${row.id}" title="Reject">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    `;
                                }

                                actions += `
                                        <button class="btn btn-sm btn-outline-danger delete-btn" data-id="${row.id}" title="Delete">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                `;

                                return actions;
                            }
                        }
                    ],
                    order: [[5, 'desc']],
                    pageLength: 10,
                    responsive: true,
                    language: {
                        processing: "Loading reviews...",
                        emptyTable: "No reviews found",
                        info: "Showing _START_ to _END_ of _TOTAL_ reviews",
                        infoEmpty: "Showing 0 to 0 of 0 reviews",
                        infoFiltered: "(filtered from _MAX_ total reviews)"
                    }
                });

                // Bind action handlers
                bindActionHandlers();
            }

            function bindActionHandlers() {
                // Individual checkbox handler
                $(document).on('change', '.review-checkbox', function() {
                    const reviewId = $(this).data('id');
                    if ($(this).is(':checked')) {
                        selectedReviews.push(reviewId);
                    } else {
                        selectedReviews = selectedReviews.filter(id => id !== reviewId);
                    }
                    updateBulkActionsVisibility();
                });

                // Action button handlers
                $(document).on('click', '.approve-btn', function() {
                    const reviewId = $(this).data('id');
                    performAction('approve', reviewId);
                });

                $(document).on('click', '.reject-btn', function() {
                    currentReviewId = $(this).data('id');
                    $('#rejectModal').modal('show');
                });

                $(document).on('click', '.view-btn', function() {
                    const reviewId = $(this).data('id');
                    window.location.href = `@Url.Action("Details", "Reviews")/${reviewId}`;
                });

                $(document).on('click', '.delete-btn', function() {
                    const reviewId = $(this).data('id');
                    if (confirm('Are you sure you want to delete this review? This action cannot be undone.')) {
                        performDelete(reviewId);
                    }
                });
            }

            function handleSelectAll() {
                const isChecked = $('#selectAll').is(':checked');
                $('.review-checkbox').prop('checked', isChecked);

                if (isChecked) {
                    selectedReviews = [];
                    $('.review-checkbox').each(function() {
                        selectedReviews.push($(this).data('id'));
                    });
                } else {
                    selectedReviews = [];
                }

                updateBulkActionsVisibility();
            }

            function updateBulkActionsVisibility() {
                const count = selectedReviews.length;
                if (count > 0) {
                    $('#bulkActions').show();
                    $('#selectedCount').text(count);
                } else {
                    $('#bulkActions').hide();
                }

                // Update select all checkbox state
                const totalCheckboxes = $('.review-checkbox').length;
                if (count === 0) {
                    $('#selectAll').prop('indeterminate', false).prop('checked', false);
                } else if (count === totalCheckboxes) {
                    $('#selectAll').prop('indeterminate', false).prop('checked', true);
                } else {
                    $('#selectAll').prop('indeterminate', true);
                }
            }

            function performAction(action, reviewId) {
                const url = `@Url.Action("", "Reviews")${action}/${reviewId}`;

                $.ajax({
                    url: url,
                    type: 'POST',
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            table.ajax.reload(null, false);
                            updateStats();
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'An error occurred. Please try again.');
                    }
                });
            }

            function performDelete(reviewId) {
                $.ajax({
                    url: `@Url.Action("Delete", "Reviews")/${reviewId}`,
                    type: 'DELETE',
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            table.ajax.reload(null, false);
                            updateStats();
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'An error occurred while deleting the review.');
                    }
                });
            }

            function performBulkAction(action) {
                if (selectedReviews.length === 0) {
                    showToast('warning', 'Please select reviews to perform bulk action.');
                    return;
                }

                const data = {
                    reviewIds: selectedReviews,
                    action: action,
                    reason: action === 'reject' ? 'Bulk rejection' : null
                };

                $.ajax({
                    url: '@Url.Action("BulkAction", "Reviews")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            table.ajax.reload(null, false);
                            selectedReviews = [];
                            updateBulkActionsVisibility();
                            updateStats();
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'An error occurred during bulk operation.');
                    }
                });
            }

            function showBulkRejectModal() {
                if (selectedReviews.length === 0) {
                    showToast('warning', 'Please select reviews to reject.');
                    return;
                }

                $('#rejectModalLabel').text(`Reject ${selectedReviews.length} Reviews`);
                currentReviewId = 'bulk';
                $('#rejectModal').modal('show');
            }

            function handleRejectConfirm() {
                const reason = $('#rejectReason').val().trim();
                if (!reason) {
                    showToast('error', 'Please provide a reason for rejection.');
                    return;
                }

                if (currentReviewId === 'bulk') {
                    const data = {
                        reviewIds: selectedReviews,
                        action: 'reject',
                        reason: reason
                    };

                    $.ajax({
                        url: '@Url.Action("BulkAction", "Reviews")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(data),
                        headers: {
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function(response) {
                            $('#rejectModal').modal('hide');
                            if (response.success) {
                                showToast('success', response.message);
                                table.ajax.reload(null, false);
                                selectedReviews = [];
                                updateBulkActionsVisibility();
                                updateStats();
                            } else {
                                showToast('error', response.message);
                            }
                        },
                        error: function() {
                            $('#rejectModal').modal('hide');
                            showToast('error', 'An error occurred during bulk rejection.');
                        }
                    });
                } else {
                    $.ajax({
                        url: `@Url.Action("Reject", "Reviews")/${currentReviewId}`,
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ reason: reason }),
                        headers: {
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function(response) {
                            $('#rejectModal').modal('hide');
                            if (response.success) {
                                showToast('success', response.message);
                                table.ajax.reload(null, false);
                                updateStats();
                            } else {
                                showToast('error', response.message);
                            }
                        },
                        error: function() {
                            $('#rejectModal').modal('hide');
                            showToast('error', 'An error occurred while rejecting the review.');
                        }
                    });
                }

                $('#rejectReason').val('');
                currentReviewId = null;
            }

            function applyFilters() {
                table.ajax.reload();
                $('#filterModal').modal('hide');
            }

            function clearFilters() {
                $('#filterForm')[0].reset();
                table.ajax.reload();
                $('#filterModal').modal('hide');
            }

            function updateStats() {
                // Reload stats from server
                location.reload(); // Simple approach, could be optimized with AJAX
            }

            function showToast(type, message) {
                const toastClass = {
                    'success': 'alert-success',
                    'error': 'alert-danger',
                    'warning': 'alert-warning',
                    'info': 'alert-info'
                }[type] || 'alert-info';

                const toast = $(`
                    <div class="alert ${toastClass} alert-dismissible fade show position-fixed"
                         style="top: 20px; right: 20px; z-index: 9999; min-width: 300px;" role="alert">
                        <i class="fas ${type === 'success' ? 'fa-check-circle' : type === 'error' ? 'fa-exclamation-circle' : 'fa-info-circle'}"></i>
                        ${message}
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                `);

                $('body').append(toast);

                setTimeout(() => {
                    toast.alert('close');
                }, 5000);
            }

            // Keyboard shortcuts
            $(document).keydown(function(e) {
                // Ctrl+A to select all (when focused on table)
                if (e.ctrlKey && e.keyCode === 65 && $('#reviewsTable').is(':focus-within')) {
                    e.preventDefault();
                    $('#selectAll').trigger('click');
                }

                // Escape to clear selection
                if (e.keyCode === 27) {
                    selectedReviews = [];
                    $('.review-checkbox').prop('checked', false);
                    $('#selectAll').prop('checked', false);
                    updateBulkActionsVisibility();
                }
            });

            // Auto-refresh every 5 minutes
            setInterval(function() {
                table.ajax.reload(null, false);
            }, 300000);
        });
    </script>

    <!-- Anti-forgery token -->
    @Html.AntiForgeryToken()
}