@model Adidas.DTOs.Operation.PaymentDTOs.PaymentDto
@{
    ViewData["Title"] = "Payment Details";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h3 class="card-title">Payment Details</h3>
                    <div class="btn-group">
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Back to List
                        </a>
                        @if (Model.PaymentStatus == "Completed")
                        {
                            <button type="button" class="btn btn-warning" 
                                    onclick="showRefundModal('@Model.Id', @Model.Amount)">
                                <i class="fas fa-undo"></i> Refund
                            </button>
                        }
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <table class="table table-borderless">
                                <tr>
                                    <th>Payment ID:</th>
                                    <td>@Model.Id</td>
                                </tr>
                                <tr>
                                    <th>Transaction ID:</th>
                                    <td>@Model.TransactionId</td>
                                </tr>
                                <tr>
                                    <th>Amount:</th>
                                    <td class="h5">@Model.Amount.ToString("C")</td>
                                </tr>
                                <tr>
                                    <th>Payment Method:</th>
                                    <td>@Model.PaymentMethod</td>
                                </tr>
                                <tr>
                                    <th>Status:</th>
                                    <td>
                                        <span class="badge bg-@GetStatusBadgeClass(Model.PaymentStatus) fs-6">
                                            @Model.PaymentStatus
                                        </span>
                                    </td>
                                </tr>
                                <tr>
                                    <th>Order ID:</th>
                                    <td>
                                        <a asp-controller="Order" asp-action="Details" asp-route-id="@Model.OrderId">
                                            @Model.OrderId
                                        </a>
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="col-md-6">
                            <table class="table table-borderless">
                                <tr>
                                    <th>Processed At:</th>
                                    <td>@Model.ProcessedAt.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                </tr>
                                <tr>
                                    <th>Created At:</th>
                                    <td>@Model.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                </tr>
                                @if (Model.UpdatedAt.HasValue)
                                {
                                    <tr>
                                        <th>Updated At:</th>
                                        <td>@Model.UpdatedAt?.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                    </tr>
                                }
                                <tr>
                                    <th>Is Active:</th>
                                    <td>
                                        <span class="badge bg-@(Model.IsActive ? "success" : "secondary")">
                                            @(Model.IsActive ? "Active" : "Inactive")
                                        </span>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>

                    @if (!string.IsNullOrEmpty(Model.GatewayResponse))
                    {
                        <div class="row mt-3">
                            <div class="col-12">
                                <h5>Gateway Response</h5>
                                <div class="alert alert-info">
                                    <pre>@Model.GatewayResponse</pre>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Refund Modal -->
<div class="modal fade" id="refundModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="Refund" asp-route-id="@Model.Id" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title">Refund Payment</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Refund Amount</label>
                        <input type="number" name="refundAmount" class="form-control" 
                               step="0.01" max="@Model.Amount" placeholder="Max: @Model.Amount.ToString("C")" />
                        <small class="form-text text-muted">Leave empty for full refund</small>
                    </div>
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle"></i>
                        This action cannot be undone. Please confirm the refund amount.
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-warning">Process Refund</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showRefundModal(paymentId, maxAmount) {
            new bootstrap.Modal(document.getElementById('refundModal')).show();
        }
    </script>
}

@{
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Completed" => "success",
            "Pending" => "warning",
            "Failed" => "danger",
            "Refunded" => "info",
            _ => "secondary"
        };
    }
}