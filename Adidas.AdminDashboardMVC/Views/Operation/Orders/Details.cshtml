@using Adidas.DTOs.Operation.OrderDTOs
@using Adidas.Models.Operation
@model OrderDto

@{
    ViewData["Title"] = $"Order Details - {Model.OrderNumber}";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <!-- Order Header -->
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div>
                        <h3 class="card-title mb-0">Order #@Model.OrderNumber</h3>
                        <small class="text-muted">Created
                            on @Model.OrderDate.ToString("MMM dd, yyyy 'at' HH:mm")</small>
                    </div>
                    <div>
                        @{
                            string badgeClass = Model.OrderStatus switch
                            {
                                OrderStatus.Pending => "badge-warning",
                                OrderStatus.Processing => "badge-info",
                                OrderStatus.Shipped => "badge-primary",
                                OrderStatus.Delivered => "badge-success",
                                OrderStatus.Cancelled => "badge-danger",
                                _ => "badge-secondary"
                            };
                        }
                        <span class="badge @badgeClass badge-lg">@Model.OrderStatus</span>
                    </div>
                </div>

                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h5>Customer Information</h5>
                            <p><strong>Name:</strong> @Model.UserName</p>
                            <p><strong>Email:</strong> @Model.UserEmail</p>
                            <p><strong>User ID:</strong> @Model.UserId</p>
                        </div>
                        <div class="col-md-6">
                            <h5>Order Information</h5>
                            <p><strong>Order Date:</strong> @Model.OrderDate.ToString("MMM dd, yyyy HH:mm")</p>
                            @if (Model.ShippedDate.HasValue)
                            {
                                <p><strong>Shipped
                                        Date:</strong> @Model.ShippedDate.Value.ToString("MMM dd, yyyy HH:mm")</p>
                            }
                            @if (Model.DeliveredDate.HasValue)
                            {
                                <p><strong>Delivered
                                        Date:</strong> @Model.DeliveredDate.Value.ToString("MMM dd, yyyy HH:mm")</p>
                            }
                            <p><strong>Currency:</strong> @Model.Currency</p>
                        </div>
                    </div>

                    @if (!string.IsNullOrEmpty(Model.Notes))
                    {
                        <div class="row mt-3">
                            <div class="col-12">
                                <h5>Order Notes</h5>
                                <div class="alert alert-info">
                                    @Model.Notes
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Addresses -->
            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Shipping Address</h5>
                        </div>
                        <div class="card-body">
                            @if (Model.ShippingAddress != null)
                            {
                                @foreach (var item in Model.ShippingAddress)
                                {
                                    <p><strong>@item.Key:</strong> @item.Value</p>
                                }
                            }
                            else
                            {
                                <p class="text-muted">No shipping address available</p>
                            }
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Billing Address</h5>
                        </div>
                        <div class="card-body">
                            @if (Model.BillingAddress != null)
                            {
                                @foreach (var item in Model.BillingAddress)
                                {
                                    <p><strong>@item.Key:</strong> @item.Value</p>
                                }
                            }
                            else
                            {
                                <p class="text-muted">No billing address available</p>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Order Summary -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">Order Summary</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-8">
                            <!-- Order Items would go here if included in the DTO -->
                            <p class="text-muted">Order items details would be displayed here when OrderItems are
                                included in the DTO</p>
                        </div>
                        <div class="col-md-4">
                            <div class="table-responsive">
                                <table class="table table-sm">
                                    <tr>
                                        <td>Subtotal:</td>
                                        <td class="text-right">@Model.Subtotal.ToString("C")</td>
                                    </tr>
                                    <tr>
                                        <td>Tax:</td>
                                        <td class="text-right">@Model.TaxAmount.ToString("C")</td>
                                    </tr>
                                    <tr>
                                        <td>Shipping:</td>
                                        <td class="text-right">@Model.ShippingAmount.ToString("C")</td>
                                    </tr>
                                    @if (Model.DiscountAmount > 0)
                                    {
                                        <tr>
                                            <td>Discount:</td>
                                            <td class="text-right text-success">
                                                -@Model.DiscountAmount.ToString("C")</td>
                                        </tr>
                                    }
                                    <tr class="font-weight-bold border-top">
                                        <td>Total:</td>
                                        <td class="text-right">@Model.TotalAmount.ToString("C")</td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Payments -->
            @if (Model.Payments.Any())
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">Payment Information</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-sm table-striped">
                                <thead>
                                <tr>
                                    <th>Payment Method</th>
                                    <th>Status</th>
                                    <th>Amount</th>
                                    <th>Transaction ID</th>
                                    <th>Processed Date</th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach (var payment in Model.Payments)
                                {
                                    <tr>
                                        <td>@payment.PaymentMethod</td>
                                        <td>
                                            <span class="badge badge-info">@payment.PaymentStatus</span>
                                        </td>
                                        <td>@payment.Amount.ToString("C")</td>
                                        <td>@payment.TransactionId</td>
                                        <td>@payment.ProcessedAt.ToString("MMM dd, yyyy HH:mm")</td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }

            <!-- Order Actions -->
            @if (User.IsInRole("Admin") || User.IsInRole("Employee"))
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">Order Actions</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <h6>Update Status</h6>
                                <form asp-action="UpdateStatus" asp-controller="Orders" method="post"
                                      @* asp-route-status="@Model.OrderStatus" *@
                                      class="form-inline">
                                    <input type="hidden" name="id" value="@Model.Id"/>

                                    <select asp-for="OrderStatus" name="status" asp-items="Html.GetEnumSelectList<OrderStatus>()"
                                            class="form-control mr-2" required></select>

                                    <button type="submit" class="btn btn-primary">Update Status</button>
                                </form>
                            </div>
                            <div class="col-md-6">
                                <h6>Cancel Order</h6>
                                @if (Model.OrderStatus == OrderStatus.Pending || Model.OrderStatus == OrderStatus.Processing)
                                {
                                    <form asp-action="Cancel" asp-controller="Orders" method="post" class="form-inline"
                                          onsubmit="return confirm('Are you sure you want to cancel this order?')">
                                        <input type="hidden" name="id" value="@Model.Id"/>
                                        <input type="text" name="reason" placeholder="Cancellation reason"
                                               class="form-control mr-2" required/>
                                        <button type="submit" class="btn btn-danger">Cancel Order</button>
                                    </form>
                                }
                                else
                                {
                                    <p class="text-muted">Order cannot be cancelled in current status</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }

            <!-- Action Buttons -->
            <div class="card-footer">
                <div class="row">
                    <div class="col-md-6">
                        <a asp-action="Index" asp-controller="Orders" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Back to Orders
                        </a>
                        @if (User.IsInRole("Admin") || User.IsInRole("Employee"))
                        {
                            <a asp-action="Edit" asp-controller="Orders" asp-route-id="@Model.Id"
                               class="btn btn-warning ml-2">
                                <i class="fas fa-edit"></i> Edit Order
                            </a>
                        }
                    </div>
                    <div class="col-md-6 text-right">
                        <button type="button" class="btn btn-info" onclick="window.print()">
                            <i class="fas fa-print"></i> Print Order
                        </button>
                        @if (User.IsInRole("Admin"))
                        {
                            <a asp-action="Delete" asp-controller="Orders" asp-route-id="@Model.Id"
                               class="btn btn-danger ml-2"
                               @* onclick="return confirm('Are you sure you want to delete this order?')" *@
                               >
                                <i class="fas fa-trash"></i> Delete Order
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script>
        // Auto-refresh order status every 60 seconds
        setTimeout(function () {
            location.reload();
        }, 60000);

        // Form validation for status update
        $('form[action*="UpdateStatus"]').on('submit', function (e) {
            console.log(e.target.value)
            var status = $('select[name="status"]').val();
            // if (!status) {
            //     e.preventDefault();
            //     console.log({status})
            //     alert('Please select a status before updating.');
            //     return false;
            // }
            // return confirm('Are you sure you want to update the order status to ' + status + '?');
        });
    </script>
}

@section Styles {
    <style>
        .badge-lg {
            padding: 0.5rem 0.75rem;
            font-size: 0.875rem;
        }

        @@media print {
            .card-footer,
            .btn,
            .navbar,
            .sidebar {
                display: none !important;
            }
        }
    </style>
}