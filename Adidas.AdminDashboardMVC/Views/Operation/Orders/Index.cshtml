@using Adidas.DTOs.Common_DTOs
@using Adidas.DTOs.Operation.OrderDTOs
@using Adidas.Models.Operation
@model PagedResultDto<OrderDto>

@{
    ViewData["Title"] = "Orders Management";
    var pageNumber = ViewBag.PageNumber ?? 1;
    var pageSize = ViewBag.PageSize ?? 10;
    // var currentFilter = ViewBag.CurrentFilter as OrderFilterDto ?? new OrderFilterDto();
    var orderNumber = ViewBag.OrderNumber ?? "";
    var orderDate = ViewBag.OrderDate ?? "";
    var orderStatus = ViewBag.OrderStatus ?? "";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h3 class="card-title">Orders Management</h3>
                    @if (User.IsInRole("Admin") || User.IsInRole("Employee"))
                    {
                        @* <a asp-action="Create" asp-controller="Orders" class="btn btn-primary"> *@
                        @*     <i class="fas fa-plus"></i> Create New Order *@
                        @* </a> *@
                    }
                </div>

                <div class="card-body">
                    <!-- Search and Filter Section -->
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <form asp-action="Index" asp-controller="Orders" method="get" class="form-inline">
                                <div class="input-group">
                                    <input type="text" name="orderNumber"  value="@orderNumber" class="form-control"
                                           placeholder="Search by Order Number...">
                                    <input type="hidden" name="pageNumber" value="1">
                                    <input type="hidden" name="pageSize" value="@pageSize">
                                    <div class="input-group-append">
                                        <button type="submit" class="btn btn-outline-secondary">
                                            <i class="fas fa-search"></i> Search
                                        </button>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-md-6 text-right">
                            @if (User.IsInRole("Admin") || User.IsInRole("Employee"))
                            {
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-outline-info dropdown-toggle"
                                            data-toggle="dropdown">
                                        Filter by Status
                                    </button>
                                    <div class="dropdown-menu">
                                        @foreach (var status in Enum.GetValues(typeof(OrderStatus)))
                                        {
                                            <a class="dropdown-item" asp-action="Index" asp-controller="Orders"
                                               asp-route-status="@status" asp-route-pageNumber="1"
                                               asp-route-pageSize="@pageSize"
                                               asp-route-orderNumber="@orderNumber"
                                               >@Enum.GetName(typeof(OrderStatus), status)</a>
                                        }
                                        @* <a class="dropdown-item" asp-action="Index" asp-controller="Orders">All</a> *@
                                        @* <a class="dropdown-item" asp-action="Index" asp-controller="Orders" *@
                                        @*    asp-route-status="@OrderStatus.Pending">Pending</a> *@
                                        @* <a class="dropdown-item" asp-action="Index" asp-controller="Orders" *@
                                        @*    asp-route-status="@OrderStatus.Processing">Processing</a> *@
                                        @* <a class="dropdown-item" asp-action="Index" asp-controller="Orders" *@
                                        @*    asp-route-status="@OrderStatus.Shipped">Shipped</a> *@
                                        @* <a class="dropdown-item" asp-action="Index" asp-controller="Orders" *@
                                        @*    asp-route-status="@OrderStatus.Delivered">Delivered</a> *@
                                        @* <a class="dropdown-item" asp-action="Index" asp-controller="Orders" *@
                                        @*    asp-route-status="@OrderStatus.Cancelled">Cancelled</a> *@
                                    </div>
                                </div>
                                <a asp-action="Summary" asp-controller="Orders" class="btn btn-outline-success ml-2">
                                    <i class="fas fa-chart-bar"></i> Summary Report
                                </a>
                            }
                        </div>
                    </div>

                    @if (Model != null && Model.Items.Any())
                    {
                        <!-- Orders Table -->
                        <div class="table-responsive">
                            <table class="table table-hover table-striped">
                                <thead class="thead-dark">
                                <tr>
                                    <th>Order #</th>
                                    <th>Customer</th>
                                    <th>Date</th>
                                    <th>Status</th>
                                    <th>Total</th>
                                    <th>Currency</th>
                                    <th>Actions</th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach (var order in Model.Items)
                                {
                                    <tr>
                                        <td>
                                            <strong>@order.OrderNumber</strong>
                                        </td>
                                        <td>
                                            <div>
                                                <strong>@order.UserName</strong>
                                                <br>
                                                <small class="text-muted">@order.UserEmail</small>
                                            </div>
                                        </td>
                                        <td>
                                            @order.OrderDate.ToString("MMM dd, yyyy")
                                            <br>
                                            <small class="text-muted">@order.OrderDate.ToString("HH:mm")</small>
                                        </td>
                                        <td>
                                            @{
                                                string badgeClass = order.OrderStatus switch
                                                {
                                                    OrderStatus.Pending => "badge-warning",
                                                    OrderStatus.Processing => "badge-info",
                                                    OrderStatus.Shipped => "badge-primary",
                                                    OrderStatus.Delivered => "badge-success",
                                                    OrderStatus.Cancelled => "badge-danger",
                                                    _ => "badge-secondary"
                                                };
                                            }
                                            <span class="badge @badgeClass">@order.OrderStatus</span>
                                        </td>
                                        <td>
                                            <strong>@order.TotalAmount.ToString("C")</strong>
                                        </td>
                                        <td>@order.Currency</td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <a asp-action="Details" asp-controller="Orders" asp-route-id="@order.Id"
                                                   class="btn btn-sm btn-outline-info" title="View Details">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                @if (User.IsInRole("Admin") || User.IsInRole("Employee"))
                                                {
                                                    <a asp-action="Edit" asp-controller="Orders"
                                                       asp-route-id="@order.Id" class="btn btn-sm btn-outline-warning"
                                                       title="Edit">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                }
                                                @if (User.IsInRole("Admin"))
                                                {
                                                    <a asp-action="Delete" asp-controller="Orders"
                                                       asp-route-id="@order.Id" class="btn btn-sm btn-outline-danger"
                                                       title="Delete">
                                                        <i class="fas fa-trash"></i>
                                                    </a>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>

                        <!-- Pagination -->
                        @if (Model.TotalCount > pageSize)
                        {
                            <nav aria-label="Orders pagination">
                                <ul class="pagination justify-content-center">
                                    @{
                                        var totalPages = (int)Math.Ceiling((double)Model.TotalCount / pageSize);
                                        var currentPage = pageNumber;
                                    }

                                    <!-- Previous Page -->
                                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                                        <a class="page-link" asp-action="Index" asp-controller="Orders"
                                           asp-route-pageNumber="@(currentPage - 1)" asp-route-pageSize="@pageSize"
                                           asp-route-orderNumber="@orderNumber">
                                            Previous
                                        </a>
                                    </li>

                                    <!-- Page Numbers -->
                                    @for (var i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                                    {
                                        <li class="page-item @(i == currentPage ? "active" : "")">
                                            <a class="page-link" asp-action="Index" asp-controller="Orders"
                                               asp-route-pageNumber="@i" asp-route-pageSize="@pageSize"
                                               asp-route-orderNumber="@orderNumber">
                                                @i
                                            </a>
                                        </li>
                                    }

                                    <!-- Next Page -->
                                    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                                        <a class="page-link" asp-action="Index" asp-controller="Orders"
                                           asp-route-pageNumber="@(currentPage + 1)" asp-route-pageSize="@pageSize"
                                           asp-route-orderNumber="@orderNumber"
                                           asp-route-orderDate="@orderDate"
                                           asp-route-orderStatus="@orderStatus"
                                           >
                                            Next
                                        </a>
                                    </li>
                                </ul>
                            </nav>

                            <!-- Pagination Info -->
                            <div class="text-center mt-3">
                                <small class="text-muted">
                                    Showing @((currentPage - 1) * pageSize + 1) to @Math.Min(currentPage * pageSize, Model.TotalCount) of @Model.TotalCount orders
                                </small>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-shopping-cart fa-3x text-muted mb-3"></i>
                            <h4>No Orders Found</h4>
                            <p class="text-muted">@(string.IsNullOrEmpty(orderNumber) && orderDate == null && orderStatus == null ? "There are no orders in the system." : "No orders match your search criteria.")</p>
                            @if (!string.IsNullOrEmpty(orderNumber) || orderDate != null || orderStatus != null)
                            {
                                <a asp-action="Index" asp-controller="Orders" class="btn btn-outline-primary">Clear
                                    Search</a>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Auto-refresh every 30 seconds for real-time updates
        setTimeout(function () {
            location.reload();
        }, 30000);

        // Confirm delete actions
        $('.btn-outline-danger').on('click', function (e) {
            if (!confirm('Are you sure you want to delete this order?')) {
                e.preventDefault();
            }
        });
    </script>
}