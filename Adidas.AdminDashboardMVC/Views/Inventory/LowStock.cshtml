@model Adidas.AdminDashboardMVC.ViewModels.Inventory.LowStockViewModel
@{
    ViewData["Title"] = "Low Stock Alerts";
    ViewData["PageHeader"] = "Low Stock Management";
    ViewData["Breadcrumb"] = "Low Stock";
}

<!-- Content Header -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">@ViewData["PageHeader"]</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home">Home</a></li>
                    <li class="breadcrumb-item"><a asp-action="Index">Inventory</a></li>
                    <li class="breadcrumb-item active">@ViewData["Breadcrumb"]</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<!-- Main content -->
<section class="content">
    <div class="container-fluid">

        

        <!-- Filter Section -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">
                            <i class="fas fa-filter"></i>
                            Filter Options
                        </h3>
                    </div>
                    <div class="card-body">
                        <form asp-action="LowStock" method="get" class="form-inline">
                            <div class="form-group mr-3">
                                <label asp-for="Threshold" class="mr-2">Alert Threshold:</label>
                                <input asp-for="Threshold" class="form-control" type="number" min="0" max="100" />
                            </div>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-search"></i> Apply Filter
                            </button>
                            <a asp-action="LowStock" class="btn btn-secondary ml-2">
                                <i class="fas fa-undo"></i> Reset
                            </a>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Low Stock Alerts Table -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">
                            <i class="fas fa-exclamation-triangle text-warning"></i>
                            Low Stock Alerts
                            <span class="badge badge-warning ml-2">@Model.Alerts.Count()</span>
                        </h3>
                        <div class="card-tools">
                            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                <i class="fas fa-minus"></i>
                            </button>
                            <button type="button" class="btn btn-tool" onclick="location.reload()">
                                <i class="fas fa-sync-alt"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (Model.Alerts.Any())
                        {
                            <div class="table-responsive">
                                <table class="table table-bordered table-striped" id="lowStockTable">
                                    <thead>
                                        <tr>
                                            <th>Product Name</th>
                                            <th>Variant Details</th>
                                            <th>Current Stock</th>
                                            <th>Reorder Level</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var alert in Model.Alerts.OrderBy(a => a.CurrentStock))
                                        {
                                            <tr class="@(alert.CurrentStock == 0 ? "table-danger" : "table-warning")">
                                                <td>
                                                    <strong>@alert.ProductName</strong>
                                                </td>
                                                <td>
                                                    <span class="text-muted">@alert.VariantDetails</span>
                                                </td>
                                                <td>
                                                    <span class="badge @(alert.CurrentStock == 0 ? "badge-danger" : alert.CurrentStock <= 5 ? "badge-warning" : "badge-info") badge-lg">
                                                        @alert.CurrentStock
                                                    </span>
                                                </td>
                                                <td>
                                                    <span class="text-muted">@alert.ReorderLevel</span>
                                                </td>
                                                <td>
                                                    @if (alert.CurrentStock == 0)
                                                    {
                                                        <span class="badge badge-danger">
                                                            <i class="fas fa-times-circle"></i> Out of Stock
                                                        </span>
                                                    }
                                                    else if (alert.CurrentStock <= 5)
                                                    {
                                                        <span class="badge badge-warning">
                                                            <i class="fas fa-exclamation-triangle"></i> Critical Low
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-info">
                                                            <i class="fas fa-info-circle"></i> Low Stock
                                                        </span>
                                                    }
                                                </td>
                                                <td>
                                                    <div class="btn-group" role="group">
                                                        <a asp-action="UpdateStock" asp-route-id="@alert.VariantId"
                                                           class="btn btn-sm btn-primary" title="Update Stock">
                                                            <i class="fas fa-edit"></i>
                                                        </a>
                                                        <button type="button" class="btn btn-sm btn-success"
                                                                onclick="showRestockModal('@alert.VariantId', '@alert.ProductName', '@alert.VariantDetails')"
                                                                title="Quick Restock">
                                                            <i class="fas fa-plus"></i>
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-5">
                                <i class="fas fa-check-circle text-success fa-4x mb-3"></i>
                                <h4 class="text-success">Great News!</h4>
                                <p class="text-muted">No products are currently below the low stock threshold of @Model.Threshold units.</p>
                                <a asp-action="Index" class="btn btn-primary">
                                    <i class="fas fa-arrow-left"></i> Back to Dashboard
                                </a>
                            </div>
                        }
                    </div>
                    @if (Model.Alerts.Any())
                    {
                        <div class="card-footer">
                            <div class="row">
                                <div class="col-md-6">
                                    <small class="text-muted">
                                        Showing @Model.Alerts.Count() alerts with threshold of @Model.Threshold units
                                    </small>
                                </div>
                                <div class="col-md-6 text-right">
                                    <button type="button" class="btn btn-sm btn-info" onclick="exportToCSV()">
                                        <i class="fas fa-download"></i> Export CSV
                                    </button>
                                    <button type="button" class="btn btn-sm btn-warning" onclick="bulkRestock()">
                                        <i class="fas fa-boxes"></i> Bulk Restock
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Quick Restock Modal -->
<div class="modal fade" id="restockModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Quick Restock</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="restockForm">
                <div class="modal-body">
                    <input type="hidden" id="restockVariantId" name="variantId" />

                    <div class="form-group">
                        <label>Product</label>
                        <p class="form-control-static" id="restockProductName"></p>
                    </div>

                    <div class="form-group">
                        <label>Variant</label>
                        <p class="form-control-static" id="restockVariantDetails"></p>
                    </div>

                    <div class="form-group">
                        <label for="restockQuantity">Quantity to Add</label>
                        <input type="number" class="form-control" id="restockQuantity" name="quantity"
                               min="1" max="10000" required>
                        <small class="form-text text-muted">
                            Enter the number of units to add to current stock.
                        </small>
                    </div>

                    <div class="form-group">
                        <label for="restockReason">Reason (Optional)</label>
                        <textarea class="form-control" id="restockReason" name="reason" rows="2"
                                  placeholder="e.g., Received new shipment, Manual adjustment..."></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-plus"></i> Add Stock
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Bulk Restock Modal -->
<div class="modal fade" id="bulkRestockModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Bulk Restock - Low Stock Items</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p class="text-muted">Set default quantities for all low stock items:</p>
                <form id="bulkRestockForm">
                    <div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>
                                        <input type="checkbox" id="selectAll"> Select All
                                    </th>
                                    <th>Product</th>
                                    <th>Current Stock</th>
                                    <th>Add Quantity</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var alert in Model.Alerts.OrderBy(a => a.CurrentStock))
                                {
                                    <tr>
                                        <td>
                                            <input type="checkbox" name="selectedItems" value="@alert.VariantId">
                                        </td>
                                        <td>
                                            <strong>@alert.ProductName</strong><br>
                                            <small class="text-muted">@alert.VariantDetails</small>
                                        </td>
                                        <td>
                                            <span class="badge @(alert.CurrentStock == 0 ? "badge-danger" : "badge-warning")">
                                                @alert.CurrentStock
                                            </span>
                                        </td>
                                        <td>
                                            <input type="number" class="form-control form-control-sm"
                                                   name="quantity_@alert.VariantId" min="1" max="1000"
                                                   value="@(alert.ReorderLevel * 2)" style="width: 80px;">
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" onclick="processBulkRestock()">
                    <i class="fas fa-boxes"></i> Process Bulk Restock
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize DataTable
            $('#lowStockTable').DataTable({
                "responsive": true,
                "lengthChange": false,
                "autoWidth": false,
                "order": [[2, "asc"]], // Sort by current stock ascending
                "pageLength": 25
            });

            // Select all checkbox
            $('#selectAll').change(function() {
                $('input[name="selectedItems"]').prop('checked', this.checked);
            });
        });

        function showRestockModal(variantId, productName, variantDetails) {
            $('#restockVariantId').val(variantId);
            $('#restockProductName').text(productName);
            $('#restockVariantDetails').text(variantDetails);
            $('#restockQuantity').val('');
            $('#restockReason').val('');
            $('#restockModal').modal('show');
        }

        function bulkRestock() {
            $('#bulkRestockModal').modal('show');
        }

        $('#restockForm').on('submit', function(e) {
            e.preventDefault();

            var variantId = $('#restockVariantId').val();
            var quantity = parseInt($('#restockQuantity').val());
            var reason = $('#restockReason').val();

            if (quantity <= 0) {
                alert('Please enter a valid quantity.');
                return;
            }

            // Call the ReleaseStock action (which adds stock)
            $.post('@Url.Action("ReleaseStock")', {
                variantId: variantId,
                quantity: quantity,
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
            })
            .done(function(response) {
                if (response.success) {
                    $('#restockModal').modal('hide');
                    location.reload();
                } else {
                    alert('Error: ' + response.message);
                }
            })
            .fail(function() {
                alert('An error occurred while processing the request.');
            });
        });

        function processBulkRestock() {
            var selectedItems = [];
            $('input[name="selectedItems"]:checked').each(function() {
                var variantId = $(this).val();
                var quantity = parseInt($('input[name="quantity_' + variantId + '"]').val());

                if (quantity > 0) {
                    selectedItems.push({
                        variantId: variantId,
                        quantity: quantity
                    });
                }
            });

            if (selectedItems.length === 0) {
                alert('Please select at least one item with a valid quantity.');
                return;
            }

            if (!confirm('Are you sure you want to restock ' + selectedItems.length + ' items?')) {
                return;
            }

            // Process each item individually
            var promises = [];
            selectedItems.forEach(function(item) {
                promises.push(
                    $.post('@Url.Action("ReleaseStock")', {
                        variantId: item.variantId,
                        quantity: item.quantity,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    })
                );
            });

            Promise.all(promises)
                .then(function(responses) {
                    var successCount = responses.filter(r => r.success).length;
                    var failCount = responses.length - successCount;

                    if (failCount === 0) {
                        alert('Successfully restocked ' + successCount + ' items.');
                    } else {
                        alert('Restocked ' + successCount + ' items. ' + failCount + ' items failed.');
                    }

                    $('#bulkRestockModal').modal('hide');
                    location.reload();
                })
                .catch(function() {
                    alert('An error occurred during bulk restock.');
                });
        }

        function exportToCSV() {
            var csv = 'Product Name,Variant Details,Current Stock,Reorder Level,Status\n';

            $('#lowStockTable tbody tr').each(function() {
                var row = [];
                $(this).find('td').each(function(index) {
                    if (index < 5) { // Only first 5 columns
                        var text = $(this).text().replace(/[\r\n]+/g, ' ').trim();
                        row.push('"' + text + '"');
                    }
                });
                csv += row.join(',') + '\n';
            });

            var blob = new Blob([csv], { type: 'text/csv' });
            var url = window.URL.createObjectURL(blob);
            var a = document.createElement('a');
            a.setAttribute('hidden', '');
            a.setAttribute('href', url);
            a.setAttribute('download', 'low_stock_alerts_' + new Date().toISOString().split('T')[0] + '.csv');
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        }
    </script>
}