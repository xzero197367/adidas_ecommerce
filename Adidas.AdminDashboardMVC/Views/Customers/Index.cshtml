@using Adidas.DTOs.Common_DTOs
@using Adidas.DTOs.People.Customer_DTOs
@model PagedResultDto<CustomerDto>
@{
    ViewData["Title"] = "All Customers";
    var filter = ViewBag.CurrentFilter as CustomerFilterDto ?? new CustomerFilterDto();
}

<!-- Content Header -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">All Customers</h1>
                <p class="text-muted">Manage customer accounts and memberships</p>
            </div>
        </div>
    </div>
</div>

<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        
        <!-- Statistics Cards Row -->
        <div class="row">
            <div class="col-lg-4 col-6">
                <div class="small-box bg-info">
                    <div class="inner">
                        <h3>@ViewBag.TotalCustomers</h3>
                        <p>Total Customers</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-users"></i>
                    </div>
                </div>
            </div>

            <div class="col-lg-4 col-6">
                <div class="small-box bg-success">
                    <div class="inner">
                        <h3>@ViewBag.ActiveCustomers</h3>
                        <p>Active Customers</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-user-check"></i>
                    </div>
                </div>
            </div>

            <div class="col-lg-4 col-6">
                <div class="small-box bg-warning">
                    <div class="inner">
                        <h3>@ViewBag.SuspendedCustomers</h3>
                        <p>Suspended Customers</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-user-times"></i>
                    </div>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-7">
                        <div class="form-group">
                            <label>Search</label>
                            <input type="text" id="searchInput" class="form-control" placeholder="Search by name or email..." value="@filter.Search">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Status</label>
                            <select id="statusFilter" class="form-control">
                                <option value="">All Status</option>
                                <option value="Active">Active</option>
                                <option value="Suspended">Suspended</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label>&nbsp;</label><br>
                            <button type="button" id="applyFilters" class="btn btn-dark btn-block">
                                <i class="fas fa-filter"></i> Apply Filters
                            </button>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 text-right">
                        <button type="button" id="exportBtn" class="btn btn-outline-secondary">
                            <i class="fas fa-download"></i> Export
                        </button>
                    </div>
                </div>
            </div>

            <div class="card-body p-0" id="customerListContainer">
                @await Html.PartialAsync("_CustomerListPartial", Model)
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
          $(document).ready(function() {
            // Set initial filter values
            $('#statusFilter').val('@filter.Status');

            // Apply filters
            $('#applyFilters').click(function() {
                applyFilters();
            });

            // Search on enter
            $('#searchInput').keypress(function(e) {
                if (e.which == 13) {
                    applyFilters();
                }
            });

            // Export functionality
            $('#exportBtn').click(function() {
                var params = getFilterParams();
                window.location.href = '@Url.Action("Export")?' + params;
            });

            // Toggle status - USING SERVICE METHOD
            $(document).on('click', '.toggle-status', function(e) {
                e.preventDefault();

                var customerId = $(this).data('id');
                var button = $(this);
                var originalText = button.html();
                var originalClass = button.hasClass('btn-success') ? 'btn-success' : 'btn-secondary';

                // Show loading state
                button.html('<i class="fas fa-spinner fa-spin"></i>');
                button.prop('disabled', true);

                console.log('Toggling status for customer ID:', customerId); // Debug log

                $.post('@Url.Action("ToggleStatus")', { id: customerId })
                    .done(function(response) {
                        console.log('Toggle response:', response); // Debug log

                        if (response.success) {
                            toastr.success(response.message);

                            // If we have the isActive status in response, update UI accordingly
                            if (typeof response.isActive !== 'undefined') {
                                if (response.isActive) {
                                    button.removeClass('btn-success').addClass('btn-secondary');
                                    button.attr('title', 'Suspend');
                                    button.html('<i class="fas fa-ban"></i>');
                                } else {
                                    button.removeClass('btn-secondary').addClass('btn-success');
                                    button.attr('title', 'Activate');
                                    button.html('<i class="fas fa-check"></i>');
                                }

                                // Update the status badge in the same row
                                var statusBadge = button.closest('tr').find('.badge');
                                if (response.isActive) {
                                    statusBadge.removeClass('badge-danger').addClass('badge-success').text('Active');
                                } else {
                                    statusBadge.removeClass('badge-success').addClass('badge-danger').text('Suspended');
                                }
                            } else {
                                // If no isActive in response, just reload the page
                                console.log('No isActive in response, reloading page...');
                                location.reload();
                                return;
                            }

                            // Refresh statistics after a short delay
                            setTimeout(function() {
                                // Reload to update statistics
                                location.reload();
                            }, 2000);

                        } else {
                            console.error('Toggle failed:', response.message);
                            toastr.error(response.message || 'Failed to update customer status');
                            button.html(originalText);
                            button.removeClass().addClass('btn btn-sm toggle-status ' + originalClass);
                        }
                    })
                    .fail(function(xhr, status, error) {
                        console.error('Toggle status AJAX error:', {
                            status: status,
                            error: error,
                            responseText: xhr.responseText,
                            statusCode: xhr.status
                        });

                        toastr.error('An error occurred while updating the customer status.');
                        button.html(originalText);
                        button.removeClass().addClass('btn btn-sm toggle-status ' + originalClass);
                    })
                    .always(function() {
                        button.prop('disabled', false);
                    });
            });

            // Delete customer
            $(document).on('click', '.delete-customer', function() {
                var customerId = $(this).data('id');
                var customerName = $(this).data('name');

                if (confirm('Are you sure you want to delete customer "' + customerName + '"?')) {
                    $.post('@Url.Action("Delete")', { id: customerId })
                        .done(function(response) {
                            if (response.success) {
                                toastr.success(response.message);
                                location.reload();
                            } else {
                                toastr.error(response.message);
                            }
                        })
                        .fail(function() {
                            toastr.error('An error occurred while deleting the customer.');
                        });
                }
            });

            // Pagination
            $(document).on('click', '.pagination a', function(e) {
                e.preventDefault();
                var url = $(this).attr('href');
                if (url && url !== '#') {
                    loadCustomers(url);
                }
            });
        });

        function applyFilters() {
            var params = getFilterParams();
            loadCustomers('@Url.Action("GetCustomersData")?' + params);
        }

        function getFilterParams() {
            return $.param({
                search: $('#searchInput').val(),
                membershipTier: $('#membershipFilter').val(),
                status: $('#statusFilter').val(),
                page: 1
            });
        }

        function loadCustomers(url) {
            $('#customerListContainer').html('<div class="text-center p-4"><i class="fas fa-spinner fa-spin"></i> Loading...</div>');

            $.get(url)
                .done(function(data) {
                    $('#customerListContainer').html(data);
                })
                .fail(function() {
                    $('#customerListContainer').html('<div class="alert alert-danger">Failed to load customers.</div>');
                });
        }
    </script>
}
