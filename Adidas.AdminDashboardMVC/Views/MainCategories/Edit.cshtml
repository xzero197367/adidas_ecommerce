@model Adidas.DTOs.Separator.Category_DTOs.CategoryUpdateDto
@using Adidas.Models.Separator

@{
    ViewData["Title"] = "Edit Main Category";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">Edit Main Category</h2>
        <a asp-action="Index" class="btn btn-secondary">Back to Main Categories List</a>
    </div>

    <div class="card p-4 shadow-sm">
        <form asp-action="Edit" method="post" enctype="multipart/form-data">
            <input type="hidden" asp-for="Id" />
            <!-- Force ParentCategoryId to be null for main categories -->
            <input type="hidden" asp-for="ParentCategoryId" value="" />

            <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="Name" class="form-label"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Description" class="form-label"></label>
                        <textarea asp-for="Description" class="form-control" rows="4"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Type" class="form-label">Category Type</label>
                        <select asp-for="Type" class="form-select">
                            <option value="">Select Category Type</option>
                            @{
                                var categoryTypes = Html.GetEnumSelectList<CategoryType>();
                            }
                            @foreach (var item in categoryTypes)
                            {
                                <option value="@item.Value" selected="@item.Selected">@item.Text</option>
                            }
                        </select>
                        <span asp-validation-for="Type" class="text-danger"></span>
                        <small class="form-text text-muted">Choose the type of category (Men, Women, Kids, Sports)</small>
                    </div>

                    <input type="hidden" asp-for="Slug" />

                    <div class="alert alert-info">
                        <i class="bi bi-info-circle me-2"></i>
                        This is a <strong>Main Category</strong> (no parent category).
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="mb-3">
                        <label class="form-label" for="ImageFile">Main Category Image</label>
                        <input type="file" name="ImageFile" id="ImageFile" class="form-control" accept="image/*" />
                        <input type="hidden" asp-for="ImageUrl" />
                        <span asp-validation-for="ImageUrl" class="text-danger"></span>
                        <small class="form-text text-muted">Upload a new image to replace the current one. Max file size: 5MB.</small>

                        <div class="mt-2">
                            <img id="imagePreview"
                                 src="@(string.IsNullOrEmpty(Model.ImageUrl) ? "#" : Url.Content(Model.ImageUrl))"
                                 alt="Main Category Image Preview"
                                 class="mt-2 rounded w-100"
                                 style="max-height: 200px; @(string.IsNullOrEmpty(Model.ImageUrl) ? "display: none;" : "")" />
                        </div>
                    </div>
                </div>
            </div>

            <div class="mt-4 border-top pt-3">
                <button type="submit" class="btn btn-primary me-2">Save Changes</button>
                <a asp-action="Index" class="btn btn-outline-secondary">Cancel</a>
            </div>
        </form>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validation.unobtrusive.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const nameInput = document.getElementById('Name');
        const slugInput = document.getElementById('Slug');

        if (nameInput && slugInput) {
            let isSlugManuallyEdited = slugInput.value.trim() !== '' && slugInput.value.trim() !== generateSlug(nameInput.value);
            slugInput.setAttribute('data-manual-edit', isSlugManuallyEdited ? 'true' : 'false');

            nameInput.addEventListener('input', function () {
                if (slugInput.value.trim() === '' || slugInput.getAttribute('data-manual-edit') !== 'true') {
                    slugInput.value = generateSlug(this.value);
                }
            });

            slugInput.addEventListener('change', function () {
                this.setAttribute('data-manual-edit', 'true');
            });

            function generateSlug(text) {
                let slug = text.toLowerCase();
                slug = slug.replace(/[^a-z0-9\s-]/g, '');
                slug = slug.replace(/\s+/g, '-').trim();
                slug = slug.replace(/-+/g, '-');
                return slug;
            }
        }

        const imageInput = document.getElementById('ImageFile');
        const imagePreview = document.getElementById('imagePreview');

        imageInput.addEventListener('change', function () {
            const file = this.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    imagePreview.src = e.target.result;
                    imagePreview.style.display = 'block';
                };
                reader.readAsDataURL(file);
            } else {
                imagePreview.src = '#';
                imagePreview.style.display = 'none';
            }
        });
    });
</script>