@model Adidas.DTOs.Main.Product_Variant_DTOs.ProductVariantDto

@{
    ViewData["Title"] = "Variant Details";
    // Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">
            <i class="fas fa-info-circle me-2"></i>Variant Details
            <small class="text-muted">@Model.Product?.Name</small>
        </h2>
        <div class="btn-group">
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">
                <i class="fas fa-edit me-2"></i>Edit
            </a>
            <a asp-action="Index" asp-route-productId="@Model.ProductId" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-2"></i>Back to Variants
            </a>
        </div>
    </div>

    <div class="row">
        <!-- Main Details -->
        <div class="col-lg-8">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-cube me-2"></i>Variant Information
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <dl class="row">
                                <dt class="col-sm-4">SKU:</dt>
                                <dd class="col-sm-8">
                                    <code>@Model.Sku</code>
                                </dd>

                                <dt class="col-sm-4">Color:</dt>
                                <dd class="col-sm-8">
                                    @if (!string.IsNullOrEmpty(Model.ColorHex))
                                    {
                                        <span class="d-inline-block me-2 rounded-circle" 
                                              style="width: 16px; height: 16px; background-color: #@Model.ColorHex;"></span>
                                    }
                                    @Model.Color
                                </dd>

                                <dt class="col-sm-4">Size:</dt>
                                <dd class="col-sm-8">
                                    <span class="badge bg-secondary">@Model.Size</span>
                                </dd>
                            </dl>
                        </div>
                        <div class="col-md-6">
                            <dl class="row">
                                <dt class="col-sm-4">Stock:</dt>
                                <dd class="col-sm-8">
                                    <span class="badge @(Model.StockQuantity > 10 ? "bg-success" : 
                                                     Model.StockQuantity > 0 ? "bg-warning" : "bg-danger")">
                                        @Model.StockQuantity
                                    </span>
                                </dd>

                                <dt class="col-sm-4">Price Adjustment:</dt>
                                <dd class="col-sm-8">
                                    @if (Model.PriceAdjustment != 0)
                                    {
                                        <span class="@(Model.PriceAdjustment > 0 ? "text-success" : "text-danger")">
                                            $@Model.PriceAdjustment.ToString("+0.00;-0.00;0")
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">None</span>
                                    }
                                </dd>

                                <dt class="col-sm-4">Status:</dt>
                                <dd class="col-sm-8">
                                    <span class="badge @(Model.IsActive ? "bg-success" : "bg-secondary")">
                                        @(Model.IsActive ? "Active" : "Inactive")
                                    </span>
                                </dd>
                            </dl>
                        </div>
                    </div>

                    <div class="mt-4">
                        <h5 class="mb-3">
                            <i class="fas fa-calculator me-2"></i>Pricing Breakdown
                        </h5>
                        <div class="table-responsive">
                            <table class="table table-sm">
                                <thead>
                                    <tr>
                                        <th>Component</th>
                                        <th class="text-end">Amount</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>Base Product Price</td>
                                        <td class="text-end">$@Model.Product?.Price.ToString("0.00")</td>
                                    </tr>
                                    <tr>
                                        <td>Variant Adjustment</td>
                                        <td class="@(Model.PriceAdjustment > 0 ? "text-success" : "text-danger") text-end">
                                            @Model.PriceAdjustment.ToString("+0.00;-0.00;0")
                                        </td>
                                    </tr>
                                    <tr class="table-active">
                                        <td><strong>Final Price</strong></td>
                                        <td class="text-end">
                                            <strong>$@((Model.Product?.Price + Model.PriceAdjustment).ToString())</strong>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Images and Actions -->
        <div class="col-lg-4">
            <!-- Variant Image -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-images me-2"></i>Variant Images
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.Images != null && Model.Images.Any())
                    {
                        <div class="row g-2">
                            @foreach (var image in Model.Images.OrderBy(i => i.SortOrder))
                            {
                                <div class="col-6">
                                    <div class="position-relative">
                                        <img src="@image.ImageUrl" alt="@image.AltText" 
                                             class="img-thumbnail w-100" style="height: 120px; object-fit: cover;">
                                        @if (image.IsPrimary)
                                        {
                                            <span class="position-absolute top-0 start-0 badge bg-primary">
                                                <i class="fas fa-star"></i> Primary
                                            </span>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="mt-3 text-center">
                            <a asp-controller="ProductImage1" asp-action="Index" asp-route-variantId="@Model.Id" 
                               class="btn btn-sm btn-outline-primary">
                                <i class="fas fa-images me-1"></i>Manage Images
                            </a>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-image fa-3x text-muted mb-3"></i>
                            <p class="text-muted">No images available for this variant</p>
                            <a asp-controller="ProductImage1" asp-action="Create" asp-route-variantId="@Model.Id" 
                               class="btn btn-sm btn-primary">
                                <i class="fas fa-plus me-1"></i>Add Images
                            </a>
                        </div>
                    }
                </div>
            </div>

            <!-- Quick Actions -->
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-bolt me-2"></i>Quick Actions
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <button class="btn btn-outline-success" onclick="updateStock('@Model.Id', @Model.StockQuantity)">
                            <i class="fas fa-boxes me-2"></i>Update Stock
                        </button>
                        <a asp-controller="ProductImage1" asp-action="Create" asp-route-variantId="@Model.Id" 
                           class="btn btn-outline-primary">
                            <i class="fas fa-camera me-2"></i>Add Image
                        </a>
                        <button class="btn btn-outline-danger" onclick="confirmDelete('@Model.Id')">
                            <i class="fas fa-trash-alt me-2"></i>Delete Variant
                        </button>
                    </div>
                </div>
            </div>

            <!-- Metadata -->
            <div class="card mt-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-database me-2"></i>System Information
                    </h5>
                </div>
                <div class="card-body">
                    <dl class="row small">
                        <dt class="col-sm-5">Created:</dt>
                        <dd class="col-sm-7">@Model.CreatedAt.ToString("g")</dd>

                        <dt class="col-sm-5">Last Updated:</dt>
                        <dd class="col-sm-7">@(Model.UpdatedAt?.ToString("g") ?? "Never")</dd>

                        <dt class="col-sm-5">Created By:</dt>
                        <dd class="col-sm-7">@(Model.CreatedBy ?? "System")</dd>

                        <dt class="col-sm-5">Updated By:</dt>
                        <dd class="col-sm-7">@(Model.UpdatedBy ?? "N/A")</dd>
                    </dl>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Stock Update Modal -->
<div class="modal fade" id="stockModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Update Stock Quantity</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">New Stock Quantity</label>
                    <input type="number" class="form-control" id="stockQuantityInput" min="0">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="submitStockUpdate()">Update</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this variant?</p>
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    This will permanently delete the variant and all associated images.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" asp-action="Delete">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.Id" />
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash-alt me-1"></i>Delete
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentVariantId = null;
        let currentStock = 0;

        function updateStock(variantId, currentQuantity) {
            currentVariantId = variantId;
            currentStock = currentQuantity;
            document.getElementById('stockQuantityInput').value = currentQuantity;
            const modal = new bootstrap.Modal(document.getElementById('stockModal'));
            modal.show();
        }

        function submitStockUpdate() {
            const newStock = document.getElementById('stockQuantityInput').value;
            
            fetch(`/Admin/ProductVariant1/UpdateStock/${currentVariantId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ stockQuantity: parseInt(newStock) })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Error: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while updating stock.');
            });
        }

        function confirmDelete(variantId) {
            const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
        }
    </script>
}