@* @model Adidas.DTOs.Main.Product_Variant_DTOs.ProductVariantCreateDto

@{
    ViewData["Title"] = "Create Product Variant";
    // Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">
            <i class="fas fa-plus-circle me-2"></i>Create Product Variant
            @if (!string.IsNullOrEmpty(ViewBag.ProductName))
            {
                <small class="text-muted">for @ViewBag.ProductName</small>
            }
        </h2>
        <div class="btn-group">
            @if (Model.ProductId != Guid.Empty)
            {
                <a asp-controller="Product1" asp-action="Details" asp-route-id="@Model.ProductId"
                   class="btn btn-outline-info">
                    <i class="fas fa-eye me-2"></i>View Product
                </a>
                <a asp-action="Index" asp-controller="ProductVariant1" asp-route-productId="@Model.ProductId"
                   class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-2"></i>Back to Variants
                </a>
            }
            else
            {
                <a asp-action="Index" asp-controller="ProductVariant1" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-2"></i>Back to Variants
                </a>
            }
        </div>
    </div>

    <form asp-action="Create" asp-controller="ProductVariant1" method="post" enctype="multipart/form-data"
          class="needs-validation" novalidate>
        @Html.AntiForgeryToken()

        <div class="row">
            <!-- Variant Information Card -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-info-circle me-2"></i>Variant Information
                    </h5>
                </div>
                <div class="card-body">
                    <!-- Product Selection -->
                    @if (Model.ProductId == Guid.Empty)
                    {
                        <div class="mb-3">
                            <label asp-for="ProductId" class="form-label">Product *</label>
                            <select asp-for="ProductId" class="form-select" required id="productSelect">
                                <option value="">Select Product</option>
                                @foreach (var product in ViewBag.Products as IEnumerable<dynamic> ?? Enumerable.Empty<dynamic>())
                                {
                                    <option value="@product.Id">@product.Name (@product.Sku)</option>
                                }
                            </select>
                            <span asp-validation-for="ProductId" class="text-danger"></span>
                        </div>
                    }
                    else
                    {
                        <input asp-for="ProductId" type="hidden" />
                        <div class="mb-3">
                            <label class="form-label">Product</label>
                            <div class="form-control-plaintext">
                                <strong>@ViewBag.ProductName</strong>
                            </div>
                        </div>
                    }

                    <div class="row">
                        <!-- Color Picker -->
                        <div class="col-md-6 mb-3">
                            <label asp-for="ColorHex" class="form-label">Choose Color *</label>
                            <input asp-for="ColorHex" type="color" class="form-control form-control-color" id="ColorHexPicker">
                            <span asp-validation-for="ColorHex" class="text-danger"></span>
                        </div>

                        <!-- Size -->
                        <div class="col-md-6 mb-3">
                            <label asp-for="Size" class="form-label">Size *</label>
                            <input asp-for="Size" class="form-control" placeholder="e.g. S, M, L, XL, 8, 9, 10" required>
                            <span asp-validation-for="Size" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="row">
                        <!-- Stock Quantity -->
                        <div class="col-md-6 mb-3">
                            <label asp-for="StockQuantity" class="form-label">Stock Quantity *</label>
                            <input asp-for="StockQuantity" class="form-control" type="number" min="0" required>
                            <span asp-validation-for="StockQuantity" class="text-danger"></span>
                        </div>

                        <!-- Price Adjustment -->
                        <div class="col-md-6 mb-3">
                            <label asp-for="PriceAdjustment" class="form-label">Price Adjustment</label>
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input asp-for="PriceAdjustment" class="form-control" type="number" step="0.01" placeholder="0.00">
                            </div>
                            <small class="text-muted">Additional cost (+) or discount (-) from base price</small>
                            <span asp-validation-for="PriceAdjustment" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="row">
                        <!-- Sort Order -->
                        <div class="col-md-6 mb-3">
                            <label asp-for="SortOrder" class="form-label">Sort Order</label>
                            <input asp-for="SortOrder" class="form-control" type="number" min="0" value="0">
                            <small class="text-muted">Lower numbers appear first</small>
                            <span asp-validation-for="SortOrder" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Sidebar -->
            <div class="col-lg-4">
                <!-- Quick Info -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-info-circle me-2"></i>Quick Info
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="alert alert-info">
                            <i class="fas fa-lightbulb me-2"></i>
                            <strong>Tips:</strong>
                            <ul class="mb-0 mt-2">
                                <li>Make sure Color + Size combination is unique</li>
                                <li>Use consistent naming (e.g., always "Large" not "L")</li>
                                <li>Price adjustment adds/subtracts from base product price</li>
                                <li>Color picker helps with visual filters</li>
                            </ul>
                        </div>
                    </div>
                </div>

                <!-- Existing Variants Preview -->
                <div class="card mb-4" id="existingVariantsCard" style="display: none;">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-layer-group me-2"></i>Existing Variants
                        </h5>
                    </div>
                    <div class="card-body">
                        <div id="existingVariantsList">
                            <!-- Will be populated by JavaScript -->
                        </div>
                    </div>
                </div>

                <!-- Actions -->
                <div class="card">
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-2"></i>Create Variant
                            </button>
                            @if (Model.ProductId != Guid.Empty)
                            {
                                <a asp-action="Index" asp-controller="ProductVariant1"
                                   asp-route-productId="@Model.ProductId" class="btn btn-outline-secondary">
                                    <i class="fas fa-times me-2"></i>Cancel
                                </a>
                            }
                            else
                            {
                                <a asp-action="Index" asp-controller="ProductVariant1"
                                   class="btn btn-outline-secondary">
                                    <i class="fas fa-times me-2"></i>Cancel
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        // Form validation
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                var forms = document.getElementsByClassName('needs-validation');
                Array.prototype.forEach.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

        // Image preview for file upload
        document.getElementById('@Html.IdFor(m => m.ImageFile)').addEventListener('change', function (e) {
            const file = e.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    document.getElementById('previewImg').src = e.target.result;
                    document.getElementById('imagePreview').style.display = 'block';
                    // Clear URL input when file is selected
                    document.getElementById('@Html.IdFor(m => m.ImageUrl)').value = '';
                };
                reader.readAsDataURL(file);
            } else {
                document.getElementById('imagePreview').style.display = 'none';
            }
        });

        // Image preview for URL
        document.getElementById('@Html.IdFor(m => m.ImageUrl)').addEventListener('blur', function () {
            if (this.value) {
                document.getElementById('previewImg').src = this.value;
                document.getElementById('imagePreview').style.display = 'block';
                // Clear file input when URL is provided
                document.getElementById('@Html.IdFor(m => m.ImageFile)').value = '';
            }
        });

        // Load existing variants when product is selected
        function loadExistingVariants(productId) {
            if (!productId) {
                document.getElementById('existingVariantsCard').style.display = 'none';
                return;
            }

            fetch(`/Admin/ProductVariant/GetByProduct/${productId}`)
                .then(response => response.json())
                .then(data => {
                    if (data && data.length > 0) {
                        let html = '<div class="table-responsive"><table class="table table-sm"><thead><tr><th>Color</th><th>Size</th><th>Stock</th></tr></thead><tbody>';

                        data.forEach(variant => {
                            html += `<tr>
                                <td><span style="display:inline-block;width:20px;height:20px;background-color:${variant.colorHex};border:1px solid #ccc;"></span> ${variant.color}</td>
                                <td><span class="badge bg-secondary">${variant.size}</span></td>
                                <td><span class="badge ${variant.stockQuantity > 0 ? 'bg-success' : 'bg-danger'}">${variant.stockQuantity}</span></td>
                            </tr>`;
                        });

                        html += '</tbody></table></div>';
                        document.getElementById('existingVariantsList').innerHTML = html;
                        document.getElementById('existingVariantsCard').style.display = 'block';
                    } else {
                        document.getElementById('existingVariantsCard').style.display = 'none';
                    }
                })
                .catch(error => {
                    console.error('Error loading variants:', error);
                    document.getElementById('existingVariantsCard').style.display = 'none';
                });
        }

        // Product selection change
        const productSelect = document.getElementById('productSelect');
        if (productSelect) {
            productSelect.addEventListener('change', function () {
                loadExistingVariants(this.value);
            });
        }

        // Load variants for pre-selected product
        @if (Model.ProductId != Guid.Empty)
        {
            <text>
                    loadExistingVariants('@Model.ProductId');
            </text>
        }

        // Auto-generate variant name suggestion
        function updateVariantSuggestion() {
            const color = document.getElementById('@Html.IdFor(m => m.Color)').value;
            const size = document.getElementById('@Html.IdFor(m => m.Size)').value;

            if (color && size) {
                console.log(`Variant will be: ${color} - ${size}`);
            }
        }

        document.getElementById('@Html.IdFor(m => m.Color)').addEventListener('input', updateVariantSuggestion);
        document.getElementById('@Html.IdFor(m => m.Size)').addEventListener('input', updateVariantSuggestion);
    </script>
}
 *@