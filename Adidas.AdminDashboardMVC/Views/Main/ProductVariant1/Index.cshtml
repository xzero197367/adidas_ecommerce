@model IEnumerable<Adidas.DTOs.Main.Product_Variant_DTOs.ProductVariantDto>

@{
    ViewData["Title"] = "Product Variants";
    // Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var productId = ViewBag.ProductId as Guid?;
}

<div class="container-fluid">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">
            <i class="fas fa-layer-group me-2"></i>Product Variants
            @if (productId.HasValue)
            {
                <small class="text-muted">for @ViewBag.ProductName</small>
            }
        </h2>
        <div class="btn-group">
            <a asp-action="Create" asp-controller="ProductVariant1" asp-route-productId="@productId" class="btn btn-primary">
                <i class="fas fa-plus me-2"></i>Add Variant
            </a>
            @if (productId.HasValue)
            {
                <a asp-controller="Product1" asp-action="Details" asp-route-id="@productId" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-2"></i>Back to Product
                </a>
            }
            else
            {
                <a asp-controller="Product1" asp-action="Index" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-2"></i>Back to Products
                </a>
            }
        </div>
    </div>

    <!-- Filters and Quick Actions -->
    <div class="row mb-4">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-body">
                    <div class="row g-3 align-items-end">
                        <div class="col-md-3">
                            <label class="form-label">Filter by Product</label>
                            <select class="form-select" id="productFilter">
                                <option value="">All Products</option>
                                @foreach (var product in ViewBag.Products as IEnumerable<dynamic> ?? Enumerable.Empty<dynamic>())
                                {
                                    <option value="@product.Id" selected="@(product.Id == productId)">
                                        @product.Name (@product.Sku)
                                    </option>
                                }
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">Stock Status</label>
                            <select class="form-select" id="stockFilter">
                                <option value="">All Stock</option>
                                <option value="instock">In Stock</option>
                                <option value="outofstock">Out of Stock</option>
                                <option value="lowstock">Low Stock (≤10)</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">Color</label>
                            <select class="form-select" id="colorFilter">
                                <option value="">All Colors</option>
                                @foreach (var color in Model.Select(v => v.Color).Distinct().OrderBy(c => c))
                                {
                                    <option value="@color">@color</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">Size</label>
                            <select class="form-select" id="sizeFilter">
                                <option value="">All Sizes</option>
                                @foreach (var size in Model.Select(v => v.Size).Distinct().OrderBy(s => s))
                                {
                                    <option value="@size">@size</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-3">
                            <button type="button" class="btn btn-outline-primary me-2" onclick="applyFilters()">
                                <i class="fas fa-filter me-1"></i>Filter
                            </button>
                            <button type="button" class="btn btn-outline-secondary" onclick="clearFilters()">
                                <i class="fas fa-times me-1"></i>Clear
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card">
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-4">
                            <h5 class="text-primary mb-0" id="totalVariants">@Model.Count()</h5>
                            <small class="text-muted">Total Variants</small>
                        </div>
                        <div class="col-4">
                            <h5 class="text-success mb-0" id="inStockVariants">@Model.Count(v => v.StockQuantity > 0)</h5>
                            <small class="text-muted">In Stock</small>
                        </div>
                        <div class="col-4">
                            <h5 class="text-warning mb-0" id="lowStockVariants">@Model.Count(v => v.StockQuantity <= 10 && v.StockQuantity > 0)</h5>
                            <small class="text-muted">Low Stock</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Variants Table -->
    <div class="card">
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover" id="variantsTable">
                        <thead class="table-dark">
                            <tr>
                                <th>Image</th>
                                <th>Product</th>
                                <th>SKU</th>
                                <th>Color</th>
                                <th>Size</th>
                                <th>Stock</th>
                                <th>Price Adj.</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var variant in Model)
                            {
                                <tr data-product-id="@variant.ProductId" 
                                    data-color="@variant.Color" 
                                    data-size="@variant.Size"
                                    data-stock="@variant.StockQuantity">
                                    <td>
                                        @if (variant.Images?.Any() == true)
                                        {
                                            <img src="@variant.Images.First().ImageUrl" alt="@variant.Color" 
                                                 class="img-thumbnail" style="width: 50px; height: 50px; object-fit: cover;">
                                        }
                                        else
                                        {
                                            <div class="bg-light d-flex align-items-center justify-content-center rounded" 
                                                 style="width: 50px; height: 50px;">
                                                <i class="fas fa-image text-muted"></i>
                                            </div>
                                        }
                                    </td>
                                    <td>
                                        <div>
                                            <strong>@variant.Product?.Name</strong>
                                            <br>
                                            <small class="text-muted">@variant.Product?.Sku</small>
                                        </div>
                                    </td>
                                    <td>
                                        <code>@variant.Sku</code>
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            @if (!string.IsNullOrEmpty(variant.ColorHex))
                                            {
                                                <div class="me-2 rounded-circle border" 
                                                     style="width: 20px; height: 20px; background-color: @variant.ColorHex;"></div>
                                            }
                                            @variant.Color
                                        </div>
                                    </td>
                                    <td>
                                        <span class="badge bg-secondary">@variant.Size</span>
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            @if (variant.StockQuantity > 10)
                                            {
                                                <span class="badge bg-success me-2">@variant.StockQuantity</span>
                                            }
                                            else if (variant.StockQuantity > 0)
                                            {
                                                <span class="badge bg-warning me-2">@variant.StockQuantity</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger me-2">0</span>
                                            }
                                            
                                            <button class="btn btn-sm btn-outline-secondary" 
                                                    onclick="showStockUpdateModal('@variant.Id', @variant.StockQuantity)"
                                                    title="Update Stock">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                        </div>
                                    </td>
                                    <td>
                                        @if (variant.PriceAdjustment != 0)
                                        {
                                            <span class="@(variant.PriceAdjustment > 0 ? "text-success" : "text-danger")">
                                                $@variant.PriceAdjustment.ToString("+0.00;-0.00;0")
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                    <td>
                                        @if (variant.IsActive)
                                        {
                                            <span class="badge bg-success">Active</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">Inactive</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm">
                                            <a asp-action="Details" asp-controller="ProductVariant1" asp-route-id="@variant.Id" 
                                               class="btn btn-outline-info" title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a asp-action="Edit" asp-controller="ProductVariant1" asp-route-id="@variant.Id" 
                                               class="btn btn-outline-primary" title="Edit">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <button class="btn btn-outline-success" 
                                                    onclick="showAddImageModal('@variant.Id')" title="Add Image">
                                                <i class="fas fa-camera"></i>
                                            </button>
                                            <button class="btn btn-outline-danger" 
                                                    onclick="deleteVariant('@variant.Id')" title="Delete">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-layer-group fa-3x text-muted mb-3"></i>
                    <h5>No variants found</h5>
                    @if (productId.HasValue)
                    {
                        <p class="text-muted">This product doesn't have any variants yet.</p>
                    }
                    else
                    {
                        <p class="text-muted">No product variants have been created yet.</p>
                    }
                    <a asp-action="Create" asp-route-productId="@productId" class="btn btn-primary">
                        <i class="fas fa-plus me-2"></i>Create First Variant
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<!-- Stock Update Modal -->
<div class="modal fade" id="stockUpdateModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Update Stock</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">Current Stock Quantity</label>
                    <input type="number" class="form-control" id="stockQuantity" min="0">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="updateStock()">Update Stock</button>
            </div>
        </div>
    </div>
</div>

<!-- Add Image Modal -->
<div class="modal fade" id="addImageModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Variant Image</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addImageForm" enctype="multipart/form-data">
                    <div class="mb-3">
                        <label class="form-label">Select Image</label>
                        <input type="file" class="form-control" id="imageFile" accept="image/*" required>
                        <small class="text-muted">Accepted formats: JPG, PNG, GIF. Max size: 5MB</small>
                    </div>
                    <div id="imagePreview" class="text-center" style="display: none;">
                        <img id="previewImg" src="" alt="Preview" class="img-thumbnail" style="max-height: 200px;">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="addImage()">Add Image</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this variant? This action cannot be undone.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentVariantId = null;

        function applyFilters() {
            const productId = document.getElementById('productFilter').value;
            const stockStatus = document.getElementById('stockFilter').value;
            const color = document.getElementById('colorFilter').value;
            const size = document.getElementById('sizeFilter').value;

            const rows = document.querySelectorAll('#variantsTable tbody tr');
            let visibleCount = 0;

            rows.forEach(row => {
                let show = true;

                // Product filter
                if (productId && row.dataset.productId !== productId) {
                    show = false;
                }

                // Stock status filter
                if (stockStatus && show) {
                    const stock = parseInt(row.dataset.stock);
                    switch (stockStatus) {
                        case 'instock':
                            if (stock <= 0) show = false;
                            break;
                        case 'outofstock':
                            if (stock > 0) show = false;
                            break;
                        case 'lowstock':
                            if (stock > 10 || stock <= 0) show = false;
                            break;
                    }
                }

                // Color filter
                if (color && show && row.dataset.color !== color) {
                    show = false;
                }

                // Size filter
                if (size && show && row.dataset.size !== size) {
                    show = false;
                }

                row.style.display = show ? '' : 'none';
                if (show) visibleCount++;
            });

            // Update stats
            updateStats();
        }

        function clearFilters() {
            document.getElementById('productFilter').value = '@(productId?.ToString() ?? "")';
            document.getElementById('stockFilter').value = '';
            document.getElementById('colorFilter').value = '';
            document.getElementById('sizeFilter').value = '';
            
            document.querySelectorAll('#variantsTable tbody tr').forEach(row => {
                row.style.display = '';
            });
            
            updateStats();
        }

        function updateStats() {
            const visibleRows = Array.from(document.querySelectorAll('#variantsTable tbody tr'))
                .filter(row => row.style.display !== 'none');
            
            const totalVariants = visibleRows.length;
            const inStock = visibleRows.filter(row => parseInt(row.dataset.stock) > 0).length;
            const lowStock = visibleRows.filter(row => {
                const stock = parseInt(row.dataset.stock);
                return stock <= 10 && stock > 0;
            }).length;

            document.getElementById('totalVariants').textContent = totalVariants;
            document.getElementById('inStockVariants').textContent = inStock;
            document.getElementById('lowStockVariants').textContent = lowStock;
        }

        function showStockUpdateModal(variantId, currentStock) {
            currentVariantId = variantId;
            document.getElementById('stockQuantity').value = currentStock;
            const modal = new bootstrap.Modal(document.getElementById('stockUpdateModal'));
            modal.show();
        }

        function updateStock() {
            const stockQuantity = document.getElementById('stockQuantity').value;
            
            fetch(`/Admin/ProductVariant/UpdateStock/${currentVariantId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                body: JSON.stringify({ stockQuantity: parseInt(stockQuantity) })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Error: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while updating stock.');
            });
        }

        function showAddImageModal(variantId) {
            currentVariantId = variantId;
            document.getElementById('addImageForm').reset();
            document.getElementById('imagePreview').style.display = 'none';
            const modal = new bootstrap.Modal(document.getElementById('addImageModal'));
            modal.show();
        }

        function addImage() {
            const fileInput = document.getElementById('imageFile');
            const formData = new FormData();
            formData.append('imageFile', fileInput.files[0]);
            
            fetch(`/Admin/ProductVariant/AddImage/${currentVariantId}`, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Error: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while adding the image.');
            });
        }

        function deleteVariant(variantId) {
            const deleteForm = document.getElementById('deleteForm');
            deleteForm.action = `/Admin/ProductVariant/Delete/${variantId}`;
            const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
        }

        // Image preview
        document.getElementById('imageFile').addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    document.getElementById('previewImg').src = e.target.result;
                    document.getElementById('imagePreview').style.display = 'block';
                };
                reader.readAsDataURL(file);
            }
        });

        // Product filter change
        document.getElementById('productFilter').addEventListener('change', function() {
            if (this.value) {
                window.location.href = `/Admin/ProductVariant?productId=${this.value}`;
            } else {
                window.location.href = '/Admin/ProductVariant';
            }
        });
    </script>
}