@model Adidas.DTOs.Common_DTOs.PagedResultDto<Adidas.DTOs.Main.Product_DTOs.ProductDto>
@using Microsoft.AspNetCore.Http
@{
    ViewData["Title"] = "Products Management";
    var request = Context.Request;
}

<link href="~/css/Product.css" rel="stylesheet" />

<div class="container-fluid">
    <div class="tab-container">
        <!-- Tab Content -->
        <div class="tab-content mt-5" id="productTabContent">
            <!-- All Products Tab -->
            <div class="tab-pane fade show active" id="all-products" role="tabpanel">
                <!-- Stats Cards -->
                <div class="stats-cards">
                    <div class="stat-card">
                        <div class="stat-value">@Model.TotalCount</div>
                        <div class="stat-label">Total Products</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value">@Model.Items.Count(p => p.InStock)</div>
                        <div class="stat-label">In Stock</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value">@Model.Items.Count(p => p.IsOnSale)</div>
                        <div class="stat-label">On Sale</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value">@Model.Items.Count(p => !p.InStock)</div>
                        <div class="stat-label">Out of Stock</div>
                    </div>
                </div>

                <!-- Add New Product Button -->
                <div class="d-flex justify-content-center justify-content-md-end mb-3">
                    <a href="@Url.Action("Create")" class="btn btn-add-new">
                        <i class="fas fa-plus"></i>Add New Product
                    </a>
                </div>

                <!-- Filters Section -->
                <div class="filter-section">
                    <h3 class="filter-title">
                        <i class="fas fa-sliders-h"></i>
                        Advanced Filters
                    </h3>

                    <form method="get" asp-action="Index" id="filterForm" onsubmit="return validateFilters();">
                        <div class="row g-3">
                            <!-- Search -->
                            <div class="col-md-6 col-lg-3">
                                <label class="form-label fw-semibold">
                                    <i class="fas fa-search me-1"></i>Search
                                </label>
                                <input type="text" name="SearchTerm"
                                       value="@request.Query["SearchTerm"]"
                                       class="form-control" placeholder="Search by name, brand, category..." />
                            </div>

                            <!-- Category -->
                            <div class="col-md-6 col-lg-3">
                                <label class="form-label fw-semibold">
                                    <i class="fas fa-layer-group me-1"></i>Category
                                </label>
                                @Html.DropDownList("CategoryId",
                                         new SelectList(ViewBag.Categories, "Value", "Text", request.Query["CategoryId"]),
                                         "All Categories",
                                         new { @class = "form-control" })
                            </div>

                            <!-- Gender -->
                            <div class="col-md-6 col-lg-3">
                                <label class="form-label fw-semibold">
                                    <i class="fas fa-venus-mars me-1"></i>Gender
                                </label>
                                @Html.DropDownList("Gender",
                                         new SelectList(ViewBag.Genders, "Value", "Text", request.Query["Gender"]),
                                         "All Genders",
                                         new { @class = "form-control" })
                            </div>

                            <!-- Min Price -->
                            <div class="col-md-6 col-lg-3">
                                <label class="form-label fw-semibold">
                                    <i class="fas fa-dollar-sign me-1"></i>Min Price
                                </label>
                                <input type="number" step="0.01" name="MinPrice" id="minPrice"
                                       value="@request.Query["MinPrice"]"
                                       class="form-control" placeholder="0.00" />
                            </div>

                            <!-- Max Price -->
                            <div class="col-md-6 col-lg-3">
                                <label class="form-label fw-semibold">
                                    <i class="fas fa-dollar-sign me-1"></i>Max Price
                                </label>
                                <input type="number" step="0.01" name="MaxPrice" id="maxPrice"
                                       value="@request.Query["MaxPrice"]"
                                       class="form-control" placeholder="9999.99" />
                            </div>

                            <!-- Min Stock -->
                            <div class="col-md-6 col-lg-3">
                                <label class="form-label fw-semibold">
                                    <i class="fas fa-box me-1"></i>Min Stock
                                </label>
                                <input type="number" name="MinStock" id="minStock"
                                       value="@request.Query["MinStock"]"
                                       class="form-control" placeholder="0" />
                            </div>

                            <!-- Max Stock -->
                            <div class="col-md-6 col-lg-3">
                                <label class="form-label fw-semibold">
                                    <i class="fas fa-box me-1"></i>Max Stock
                                </label>
                                <input type="number" name="MaxStock" id="maxStock"
                                       value="@request.Query["MaxStock"]"
                                       class="form-control" placeholder="1000" />
                            </div>

                            <!-- In Stock -->
                            <div class="col-md-6 col-lg-3">
                                <label class="form-label fw-semibold">
                                    <i class="fas fa-warehouse me-1"></i>In Stock
                                </label>
                                @Html.DropDownList("InStock",
                                         new SelectList(new[]
                                         {
                                new { Value = "", Text = "All" },
                                new { Value = "true", Text = "Yes" },
                                new { Value = "false", Text = "No" }
                                }, "Value", "Text", request.Query["InStock"]),
                                         new { @class = "form-control" })
                            </div>

                            <!-- On Sale -->
                            <div class="col-md-6 col-lg-3">
                                <label class="form-label fw-semibold">
                                    <i class="fas fa-percent me-1"></i>On Sale
                                </label>
                                @Html.DropDownList("IsOnSale",
                                         new SelectList(new[]
                                         {
                                new { Value = "", Text = "All" },
                                new { Value = "true", Text = "Yes" },
                                new { Value = "false", Text = "No" }
                                }, "Value", "Text", request.Query["IsOnSale"]),
                                         new { @class = "form-control" })
                            </div>

                            <!-- Buttons -->
                            <div class="col-md-6 col-lg-3">
                                <label class="form-label fw-semibold d-block d-md-none">&nbsp;</label>
                                <div class="d-flex gap-2 mt-4">
                                    <button type="submit" class="btn btn-search">
                                        <i class="fas fa-search"></i>Search
                                    </button>
                                    <a href="@Url.Action("Index")" class="btn btn-clear">
                                        <i class="fas fa-undo"></i>Reset
                                    </a>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>

                <!-- Results Info -->
                @if (Model.Items.Any())
                {
                    <div class="results-info">
                        <i class="fas fa-info-circle me-2"></i>
                        Displaying @Model.Items.Count() of @Model.TotalCount products
                        @if (Model.TotalPages > 1)
                        {
                            <span class="d-none d-md-inline ms-3">
                                <i class="fas fa-file-alt me-1"></i>Page @Model.PageNumber of @Model.TotalPages
                            </span>
                        }
                    </div>
                }

                <!-- Products Table -->
                <div class="table-container">
                    <div class="table-responsive">
                        <table class="table products-table">
                            <thead>
                                <tr>
                                    <th><i class="fas fa-tag me-1"></i>Name</th>
                                    <th><i class="fas fa-dollar-sign me-1"></i>Price</th>
                                    <th class="d-none d-md-table-cell"><i class="fas fa-list-alt me-1"></i>Category</th>
                                    <th class="d-none d-lg-table-cell"><i class="fas fa-trademark me-1"></i>Brand</th>
                                    <th class="d-none d-lg-table-cell"><i class="fas fa-venus-mars me-1"></i>Gender</th>
                                    <th><i class="fas fa-percentage me-1"></i>Sale</th>
                                    <th><i class="fas fa-warehouse me-1"></i>Stock</th>
                                    <th><i class="fas fa-cogs me-1"></i>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Items.Any())
                                {
                                    foreach (var product in Model.Items)
                                    {
                                        <tr>
                                            <td class="product-name" title="@product.Name">
                                                <div>@product.Name</div>
                                                <div class="text-muted small text-center">
                                                    @product.Description
                                                </div>
                                            </td>
                                            <td class="price-display">
                                                @product.DisplayPrice.ToString("C")
                                                <br />
                                                @if (product.IsOnSale)
                                                {
                                                    <small class="text-muted"><s>@product.Price.ToString("C")</s></small>
                                                }
                                            </td>
                                            <td class="d-none d-md-table-cell">@product.CategoryName</td>
                                            <td class="d-none d-lg-table-cell">@product.BrandName</td>
                                            <td class="d-none d-lg-table-cell">@product.GenderTarget</td>
                                            <td>
                                                <span class="status-badge @(product.IsOnSale ? "status-yes" : "status-no")">
                                                    <i class="fas @(product.IsOnSale ? "fa-check" : "fa-times")"></i>
                                                    <span class="d-none d-sm-inline">@(product.IsOnSale ? "Yes" : "No")</span>
                                                </span>
                                            </td>
                                            <td>
                                                <span class="status-badge @(product.InStock ? "status-yes" : "status-no")">
                                                    <i class="fas @(product.InStock ? "fa-check" : "fa-times")"></i>
                                                    <span class="d-none d-sm-inline">@(product.InStock ? "Yes" : "No")</span>
                                                </span>
                                            </td>
                                            <td>
                                                <div class="action-buttons">
                                                    <a href="@Url.Action("Details", "Products", new { id = product.Id })"
                                                       class="btn-action btn-view" title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a href="@Url.Action("Edit", new { id = product.Id })"
                                                       class="btn-action btn-edit"
                                                       title="Edit Product">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <button class="btn-delete" onclick="confirmDelete('@product.Id', '@product.Name', @((product.Variants != null && product.Variants.Any()) ? "true" : "false"))">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="9" class="no-products">
                                            <div class="no-products-icon">
                                                <i class="fas fa-search"></i>
                                            </div>
                                            <h4 class="mb-3">No Products Found</h4>
                                            <p class="mb-3">We couldn't find any products matching your current filters.</p>
                                            <a href="@Url.Action("Index")" class="btn btn-clear">
                                                <i class="fas fa-undo me-2"></i>Clear All Filters
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Pagination -->
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Product pagination">
                        <ul class="pagination">
                            @if (Model.PageNumber > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-action="Index"
                                       asp-route-CategoryId="@request.Query["CategoryId"]"
                                       asp-route-Gender="@request.Query["Gender"]"
                                       asp-route-MinPrice="@request.Query["MinPrice"]"
                                       asp-route-MaxPrice="@request.Query["MaxPrice"]"
                                       asp-route-MinStock="@request.Query["MinStock"]"
                                       asp-route-MaxStock="@request.Query["MaxStock"]"
                                       asp-route-InStock="@request.Query["InStock"]"
                                       asp-route-IsOnSale="@request.Query["IsOnSale"]"
                                       asp-route-PageNumber="1"
                                       title="First Page">
                                        <i class="fas fa-angle-double-left"></i>
                                    </a>
                                </li>
                                <li class="page-item">
                                    <a class="page-link" asp-action="Index"
                                       asp-route-CategoryId="@request.Query["CategoryId"]"
                                       asp-route-Gender="@request.Query["Gender"]"
                                       asp-route-MinPrice="@request.Query["MinPrice"]"
                                       asp-route-MaxPrice="@request.Query["MaxPrice"]"
                                       asp-route-MinStock="@request.Query["MinStock"]"
                                       asp-route-MaxStock="@request.Query["MaxStock"]"
                                       asp-route-InStock="@request.Query["InStock"]"
                                       asp-route-IsOnSale="@request.Query["IsOnSale"]"
                                       asp-route-PageNumber="@(Model.PageNumber - 1)"
                                       title="Previous Page">
                                        <i class="fas fa-chevron-left d-md-none"></i>
                                        <span class="d-none d-md-inline"><i class="fas fa-chevron-left me-1"></i>Prev</span>
                                    </a>
                                </li>
                            }

                            @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                            {
                                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                    <a class="page-link" asp-action="Index"
                                       asp-route-CategoryId="@request.Query["CategoryId"]"
                                       asp-route-Gender="@request.Query["Gender"]"
                                       asp-route-MinPrice="@request.Query["MinPrice"]"
                                       asp-route-MaxPrice="@request.Query["MaxPrice"]"
                                       asp-route-MinStock="@request.Query["MinStock"]"
                                       asp-route-MaxStock="@request.Query["MaxStock"]"
                                       asp-route-InStock="@request.Query["InStock"]"
                                       asp-route-IsOnSale="@request.Query["IsOnSale"]"
                                       asp-route-PageNumber="@i">
                                        @i
                                    </a>
                                </li>
                            }

                            @if (Model.PageNumber < Model.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-action="Index"
                                       asp-route-CategoryId="@request.Query["CategoryId"]"
                                       asp-route-Gender="@request.Query["Gender"]"
                                       asp-route-MinPrice="@request.Query["MinPrice"]"
                                       asp-route-MaxPrice="@request.Query["MaxPrice"]"
                                       asp-route-MinStock="@request.Query["MinStock"]"
                                       asp-route-MaxStock="@request.Query["MaxStock"]"
                                       asp-route-InStock="@request.Query["InStock"]"
                                       asp-route-IsOnSale="@request.Query["IsOnSale"]"
                                       asp-route-PageNumber="@(Model.PageNumber + 1)"
                                       title="Next Page">
                                        <i class="fas fa-chevron-right d-md-none"></i>
                                        <span class="d-none d-md-inline">Next<i class="fas fa-chevron-right ms-1"></i></span>
                                    </a>
                                </li>
                                <li class="page-item">
                                    <a class="page-link" asp-action="Index"
                                       asp-route-CategoryId="@request.Query["CategoryId"]"
                                       asp-route-Gender="@request.Query["Gender"]"
                                       asp-route-MinPrice="@request.Query["MinPrice"]"
                                       asp-route-MaxPrice="@request.Query["MaxPrice"]"
                                       asp-route-MinStock="@request.Query["MinStock"]"
                                       asp-route-MaxStock="@request.Query["MaxStock"]"
                                       asp-route-InStock="@request.Query["InStock"]"
                                       asp-route-IsOnSale="@request.Query["IsOnSale"]"
                                       asp-route-PageNumber="@Model.TotalPages"
                                       title="Last Page">
                                        <i class="fas fa-angle-double-right"></i>
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            </div>

            <!-- On Sale Tab -->
            <div class="tab-pane fade" id="on-sale" role="tabpanel">
                <div id="on-sale-content" class="empty-tabs text-center">
                    <i class="fas fa-tags" style="color: #f59e0b;"></i>
                    <h3>Products On Sale</h3>
                    <p>Display products that are currently on sale with special discounts</p>
                    <button class="btn btn-warning" onclick="loadOnSaleProducts()">
                        <i class="fas fa-sync me-2"></i>Load Sale Products
                    </button>
                </div>
            </div>

            <!-- Out of Stock Tab -->
            <div class="tab-pane fade" id="out-of-stock" role="tabpanel">
                <div id="out-of-stock-content" class="empty-tabs text-center">
                    <i class="fas fa-exclamation-triangle" style="color: #ef4444;"></i>
                    <h3>Out of Stock Products</h3>
                    <p>Manage products that are currently out of stock and need restocking</p>
                    <button class="btn btn-danger" onclick="loadOutOfStockProducts()">
                        <i class="fas fa-sync me-2"></i>Load Out of Stock Products
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function confirmDelete(id, name, hasVariants) {
          if (hasVariants) {
            Swal.fire({
              title: 'Cannot delete',
              text: 'This product has variants and cannot be deleted.',
              icon: 'warning',
              confirmButtonText: 'OK'
            });
            return;
          }
          Swal.fire({
            title: `Are you sure you want to delete "${name}"?`,
            text: "This action cannot be undone!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'Cancel',
            reverseButtons: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6'
          }).then((result) => {
            if (result.isConfirmed) {
              fetch('@Url.Action("Delete")', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/x-www-form-urlencoded',
                  'RequestVerificationToken': '@Antiforgery.GetAndStoreTokens(Context).RequestToken'
                },
                body: `id=${id}`
              })
              .then(response => {
                if (response.ok) {
                  Swal.fire({
                    title: 'Deleted!',
                    text: 'Product has been deleted successfully.',
                    icon: 'success',
                    timer: 1500,
                    showConfirmButton: false
                  }).then(() => {
                    location.reload();
                  });
                } else {
                  Swal.fire('Error!', 'Failed to delete product.', 'error');
                }
              })
              .catch(() => {
                Swal.fire('Error!', 'An error occurred while deleting.', 'error');
              });
            }
          });
        }
   
        function validateFilters() {
            var minPrice = parseFloat(document.getElementById("minPrice").value) || 0;
            var maxPrice = parseFloat(document.getElementById("maxPrice").value) || Infinity;
            var minStock = parseInt(document.getElementById("minStock").value) || 0;
            var maxStock = parseInt(document.getElementById("maxStock").value) || Infinity;

            // Positive value check
            if (minPrice < 0 || maxPrice < 0) {
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'warning',
                    title: 'Price values must be positive',
                    showConfirmButton: false,
                    timer: 2000
                });
                return false;
            }

            if (minStock < 0 || maxStock < 0) {
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'warning',
                    title: 'Stock values must be positive',
                    showConfirmButton: false,
                    timer: 2000
                });
                return false;
            }

            // Min <= Max check
            if (minPrice > maxPrice) {
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'warning',
                    title: 'Min Price cannot be greater than Max Price',
                    showConfirmButton: false,
                    timer: 2000
                });
                return false;
            }

            if (minStock > maxStock) {
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'warning',
                    title: 'Min Stock cannot be greater than Max Stock',
                    showConfirmButton: false,
                    timer: 2000
                });
                return false;
            }

            return true; // submit form
        }
    </script>
}